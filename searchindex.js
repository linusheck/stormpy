Search.setIndex({"docnames": ["advanced_topics", "api", "api/core", "api/dft", "api/exceptions", "api/gspn", "api/info", "api/logic", "api/pars", "api/storage", "api/utility", "contributors", "doc/analysis", "doc/building_models", "doc/dfts", "doc/engines", "doc/exploration", "doc/gspns", "doc/models/building_ctmcs", "doc/models/building_dtmcs", "doc/models/building_mas", "doc/models/building_mdps", "doc/parametric_models", "doc/reward_models", "doc/schedulers", "doc/shortest_paths", "doc/simulator", "getting_started", "index", "installation"], "filenames": ["advanced_topics.rst", "api.rst", "api/core.rst", "api/dft.rst", "api/exceptions.rst", "api/gspn.rst", "api/info.rst", "api/logic.rst", "api/pars.rst", "api/storage.rst", "api/utility.rst", "contributors.rst", "doc/analysis.ipynb", "doc/building_models.ipynb", "doc/dfts.ipynb", "doc/engines.ipynb", "doc/exploration.ipynb", "doc/gspns.ipynb", "doc/models/building_ctmcs.ipynb", "doc/models/building_dtmcs.ipynb", "doc/models/building_mas.ipynb", "doc/models/building_mdps.ipynb", "doc/parametric_models.ipynb", "doc/reward_models.ipynb", "doc/schedulers.ipynb", "doc/shortest_paths.ipynb", "doc/simulator.ipynb", "getting_started.ipynb", "index.rst", "installation.rst"], "titles": ["Advanced Examples", "Stormpy API Reference", "Stormpy.core", "Stormpy.dft", "Stormpy.exceptions", "Stormpy.gspn", "Stormpy.info", "Stormpy.logic", "Stormpy.pars", "Stormpy.storage", "Stormpy.utility", "Contributors", "Analysis", "Building Models", "Dynamic Fault Trees", "Engines", "Exploring Models", "Generalized Stochastic Petri Nets", "Continuous-time Markov chains (CTMCs)", "Discrete-time Markov chains (DTMCs)", "Markov automata (MAs)", "Markov decision processes (MDPs)", "Parametric Models", "Reward Models", "Working with Schedulers", "Working with Shortest Paths", "Working with Simulators", "Getting Started", "Stormpy Documentation", "Installation"], "terms": {"thi": [0, 2, 3, 5, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "guid": [0, 12, 27, 29], "i": [0, 2, 3, 5, 7, 9, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "collect": [0, 3, 18, 19, 20, 21], "meant": [0, 26], "bridg": 0, "gap": 0, "between": [0, 19], "get": [0, 2, 3, 5, 6, 7, 8, 9, 10, 12, 16, 19, 23, 24, 25, 28, 29], "start": [0, 2, 5, 9, 12, 14, 16, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29], "api": [0, 10, 29], "analysi": [0, 2, 9, 28], "background": [0, 26], "qualit": [0, 2], "adapt": 0, "model": [0, 2, 3, 5, 8, 9, 10, 14, 15, 24, 25, 28, 29], "check": [0, 2, 3, 5, 6, 8, 9, 10, 15, 23, 24, 26], "engin": [0, 2, 25, 28], "algorithm": [0, 16, 25, 27], "build": [0, 2, 3, 5, 6, 9, 15, 22, 23, 24, 25, 26, 28], "differ": [0, 15, 25, 26, 27, 29], "formal": 0, "discret": [0, 2, 18, 21, 24, 28], "time": [0, 2, 3, 5, 7, 9, 14, 17, 21, 24, 28], "markov": [0, 2, 9, 22, 23, 27, 28], "chain": [0, 2, 21, 27, 28], "dtmc": [0, 2, 8, 9, 13, 16, 18, 21, 22, 27, 28], "transit": [0, 2, 5, 8, 9, 15, 16, 17, 22, 23, 26, 27], "matrix": [0, 2, 9, 27], "label": [0, 2, 7, 9, 20, 22, 25, 26, 27], "reward": [0, 2, 7, 9, 16, 18, 20, 26, 28], "decis": [0, 15, 19, 28], "process": [0, 2, 19, 20, 26, 28], "mdp": [0, 2, 8, 9, 19, 20, 22, 28], "partial": [0, 2, 3, 9], "observ": [0, 2, 3, 9, 16, 26], "pomdp": [0, 2, 8, 9], "continu": [0, 2, 13, 16, 24, 26, 28, 29], "ctmc": [0, 2, 8, 9, 13, 19, 20, 28], "exit": [0, 2, 9, 20], "rate": [0, 2, 5, 9, 20, 22], "automata": [0, 2, 9, 28], "ma": [0, 2, 8, 9, 24, 28], "markovian": [0, 2, 9], "state": [0, 2, 3, 7, 8, 9, 12, 15, 18, 19, 21, 22, 23, 24, 25], "spars": [0, 2, 9, 12, 18, 19, 20, 21], "symbol": [0, 2, 9, 12, 26], "hybrid": [0, 2], "explor": [0, 2, 3, 26, 27, 28], "read": 0, "sort": [0, 2, 9, 27], "work": [0, 1, 18, 23, 28, 29], "schedul": [0, 2, 9, 28], "examin": [0, 27], "shortest": [0, 28], "path": [0, 2, 3, 7, 10, 12, 13, 14, 17, 22, 24, 26, 27, 28, 29], "parametr": [0, 2, 3, 8, 9, 13, 28, 29], "instanti": [0, 2, 3, 8], "inform": [0, 2, 3, 5, 6, 9, 12, 13, 16, 17, 24, 26, 27], "about": [0, 2, 7, 9, 13, 14, 23, 27], "dynam": [0, 3, 28, 29], "fault": [0, 3, 28, 29], "tree": [0, 3, 28, 29], "dft": [0, 1, 28, 29], "analyz": 0, "gener": [0, 2, 3, 5, 7, 10, 28], "stochast": [0, 2, 5, 9, 28], "petri": [0, 5, 28], "net": [0, 5, 28], "load": [0, 3, 14], "gspn": [0, 1, 28], "progress": [1, 3, 28, 29], "core": [1, 3, 5, 7, 8, 9, 24, 28, 29], "info": [1, 3, 28], "except": [1, 2, 8, 9, 28], "logic": [1, 2, 8, 28], "storag": [1, 2, 3, 5, 7, 8, 10, 15, 18, 19, 20, 21, 28], "util": [1, 2, 9, 25, 28], "par": [1, 22, 28, 29], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 26], "actionmaskdoubl": 2, "atomicexpressionformula": [2, 7], "formula": [2, 7, 8, 9, 14, 22, 24], "an": [2, 5, 7, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27], "atom": [2, 7], "express": [2, 5, 7, 9, 10, 27], "get_express": [2, 7, 9], "self": [2, 3, 5, 7, 8, 9, 10, 19, 27], "atomiclabelformula": [2, 7], "properti": [2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 22, 23, 24], "bdd_sylvan": [2, 9], "bdd": [2, 9, 15], "to_express": [2, 9], "expression_manag": [2, 5, 9], "storm": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 24, 25, 27, 28], "expressionmanag": [2, 5, 9], "tupl": [2, 3, 8, 9], "list": [2, 3, 5, 9, 10, 11, 18, 20, 21, 23, 25, 27], "dict": [2, 3, 5, 7, 8, 9, 22, 26], "int": [2, 3, 5, 8, 9, 10], "variabl": [2, 3, 5, 7, 8, 9, 10, 26, 27], "binarybooleanoperatortyp": [2, 7], "member": [2, 3, 7, 8, 9, 10], "AND": [2, 3, 7, 14], "OR": [2, 3, 7], "0": [2, 3, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "1": [2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "name": [2, 3, 5, 7, 8, 9, 10, 17, 19, 22, 23, 26], "valu": [2, 3, 7, 8, 9, 10, 16, 18, 19, 22, 27], "binarypathformula": [2, 7], "two": [2, 7, 9, 13, 17, 19, 21, 27, 29], "operand": [2, 7, 9], "left_subformula": [2, 7], "right_subformula": [2, 7], "binarystateformula": [2, 7], "bisimulationtyp": 2, "type": [2, 3, 5, 7, 8, 9, 10, 15, 16, 18, 19, 20, 21, 27], "bisimul": 2, "strong": 2, "weak": 2, "bitvector": [2, 9, 10, 19, 20], "index": [2, 3, 9, 14, 25, 26, 28], "bool": [2, 3, 5, 7, 8, 9, 10], "static": [2, 3, 5, 8, 9], "load_from_str": [2, 9], "descript": [2, 9, 13, 16, 19, 20, 21, 26, 27], "str": [2, 3, 5, 7, 8, 9, 26], "number_of_set_bit": [2, 9], "set": [2, 3, 5, 7, 8, 9, 12, 13, 16, 17, 18, 19, 21, 22, 25, 26, 27, 28, 29], "true": [2, 3, 5, 6, 8, 9, 18, 21, 24, 26], "none": [2, 3, 5, 6, 7, 8, 9, 10, 16, 18, 19, 20, 23], "size": [2, 9, 26], "store_as_str": [2, 9], "booleanbinarystateformula": [2, 7], "boolean": [2, 7, 9, 10], "binari": [2, 7, 15], "booleanliteralformula": [2, 7], "liter": [2, 7, 9], "boundeduntilformula": [2, 7], "until": [2, 7], "either": [2, 7, 14, 17, 29], "step": [2, 3, 7, 13, 14, 16, 17, 26, 28], "bound": [2, 7, 8, 9], "has_lower_bound": [2, 7], "is_multidimension": [2, 7], "multi": [2, 7], "dimension": [2, 7], "upper_bound_express": [2, 7, 9], "builderopt": [2, 26], "option": [2, 5, 8, 9, 13, 26], "preserved_label_nam": 2, "preserv": [2, 8, 27], "set_add_out_of_bounds_st": 2, "new_valu": 2, "out": 2, "set_add_overlapping_guards_label": 2, "overlap": [2, 9], "guard": [2, 9], "set_build_all_label": 2, "all": [2, 8, 9, 14, 15, 16, 18, 19, 20, 24, 26, 29], "set_build_all_reward_model": 2, "set_build_choice_label": [2, 26], "choic": [2, 3, 9, 18, 19, 20, 21, 24, 29], "set_build_observation_valu": 2, "valuat": [2, 3, 8, 9], "set_build_state_valu": [2, 26], "set_build_with_choice_origin": 2, "origin": [2, 5, 9, 16], "checktask": 2, "task": [2, 15], "set_hint": 2, "arg0": [2, 5, 8, 9, 10], "modelcheck": 2, "modelcheckerhint": 2, "hint": [2, 16], "mai": [2, 12, 13, 16, 26, 27], "speed": 2, "up": 2, "solver": [2, 10], "set_produce_schedul": 2, "produce_schedul": 2, "whether": [2, 3, 5, 9], "should": [2, 3, 9, 19, 27], "produc": 2, "possibl": [2, 5, 15, 19, 22, 25, 29], "choicelabel": [2, 9, 21], "add_label_to_choic": [2, 9, 21], "add": [2, 5, 9, 10, 17, 19, 27, 29], "given": [2, 3, 5, 8, 9, 15, 17, 19, 24, 27], "get_choic": [2, 9, 24], "which": [2, 3, 5, 9, 15, 16, 19, 20, 23, 24, 25, 26, 27, 29], "have": [2, 9, 11, 12, 16, 20, 21, 23, 24, 26, 27, 29], "get_labels_of_choic": [2, 9], "set_choic": [2, 9], "choiceorigin": [2, 9], "repres": [2, 9, 19, 21, 26], "term": [2, 9, 15, 19, 26], "input": [2, 5, 9, 16, 17, 22], "spec": [2, 9], "as_jani_choice_origin": [2, 9], "janichoiceorigin": [2, 9], "as_prism_choice_origin": [2, 9], "prismchoiceorigin": [2, 9], "get_choice_info": [2, 9], "identifi": [2, 9], "human": [2, 9], "readabl": [2, 9], "string": [2, 3, 8, 9, 14], "get_identifier_info": [2, 9], "get_number_of_identifi": [2, 9], "number": [2, 3, 5, 7, 9, 12, 15, 16, 17, 19, 21, 22, 25, 26, 27, 29], "consid": [2, 9, 12, 15, 19, 23, 27], "is_jani_choice_origin": [2, 9], "is_prism_choice_origin": [2, 9], "comparisontyp": [2, 7], "less": [2, 7, 9], "leq": [2, 7, 9], "greater": [2, 7, 9], "geq": [2, 7, 9], "3": [2, 3, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "2": [2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "conditionalformula": [2, 7], "right": [2, 7], "hand": [2, 7], "side": [2, 7], "being": [2, 7, 29], "condit": [2, 7], "constraintcollector": [2, 22], "collector": [2, 22], "constraint": [2, 9, 22], "graph_preserving_constraint": [2, 22], "ensur": [2, 9, 22, 29], "graph": [2, 9, 16, 22], "wellformed_constraint": [2, 22], "wellform": 2, "cumulativerewardformula": [2, 7], "sum": [2, 7], "over": [2, 7, 9, 16, 20, 21, 23, 24, 27], "ddmanager_sylvan": [2, 9], "get_meta_vari": [2, 9], "expression_vari": [2, 9], "ddmetavariable_sylvan": [2, 9], "ddmetavariabletyp": [2, 9], "compute_indic": [2, 9], "lowest_valu": [2, 9], "dd_sylvan": [2, 9], "dd": [2, 9, 12, 15], "dd_manag": [2, 9], "manag": [2, 9], "meta_vari": [2, 9], "contain": [2, 3, 9, 10, 12, 14, 19, 20, 21, 24, 27], "meta": [2, 9], "node_count": [2, 9], "node": [2, 9], "count": [2, 9, 10], "dicestringvisitor": [2, 9], "translat": [2, 9, 19, 27], "dice": [2, 9], "to_str": [2, 3, 9], "directencodingopt": 2, "allow_placehold": 2, "directencodingparseropt": 2, "drn": [2, 13], "parser": [2, 5, 9], "build_choice_label": 2, "distributiondoubl": [2, 9], "finit": [2, 9], "support": [2, 9, 12, 13, 15, 16, 19, 24, 26, 29], "distribut": [2, 9, 19, 20, 27, 29], "eliminationlabelbehavior": 2, "behavior": 2, "while": [2, 26, 27, 29], "elimin": [2, 8, 9], "non": [2, 3, 9, 24, 25, 27], "keep_label": 2, "merge_label": 2, "delete_label": 2, "endcomponenteliminatorreturntypedoubl": 2, "result": [2, 3, 8, 10, 12, 14, 15, 22, 23, 24], "endcompon": 2, "The": [2, 5, 7, 9, 11, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29], "new_to_old_row_map": 2, "map": [2, 9, 22], "give": [2, 16, 26], "each": [2, 9, 19, 20, 21, 24, 27], "row": [2, 9, 18, 19, 20, 21], "fo": 2, "new": [2, 5, 9, 16, 21, 25], "correspond": [2, 5, 9, 25], "old_to_new_state_map": 2, "For": [2, 3, 19, 20, 21, 24, 25, 27, 29], "subsystem": 2, "remov": [2, 5, 7, 9], "ar": [2, 9, 12, 13, 16, 19, 20, 21, 22, 23, 25, 26, 27, 29], "ec": 2, "sink_row": 2, "indic": [2, 9, 25, 27], "stai": 2, "forev": 2, "environ": [2, 8, 12], "solver_environ": [2, 12], "part": [2, 9, 26, 27], "equationsolvertyp": [2, 12], "equat": 2, "system": [2, 29], "nativ": [2, 12], "eigen": 2, "gmmxx": 2, "topolog": [2, 16], "4": [2, 3, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "eventuallyformula": [2, 7], "eventu": [2, 7, 27], "exactchecktask": 2, "exact": [2, 6, 8], "exactsparsematrix": [2, 9], "get_row": [2, 9], "sparsematrix": [2, 9], "__gmp_expr": [2, 9], "__mpq_struct": [2, 9], "get_row_group_end": [2, 9], "get_row_group_start": [2, 9], "row_start": [2, 9], "row_end": [2, 9], "from": [2, 3, 5, 6, 8, 9, 12, 13, 14, 16, 19, 20, 23, 24, 25, 27, 29], "end": [2, 5, 9], "has_trivial_row_group": [2, 9], "trivial": [2, 9, 19, 23], "group": [2, 3, 9, 18, 19, 20, 21], "nr_column": [2, 9], "column": [2, 9, 16, 19, 21, 27], "nr_entri": [2, 9], "zero": [2, 9], "entri": [2, 9, 19, 21], "nr_row": [2, 9], "print_row": [2, 9], "print": [2, 3, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "row_it": [2, 9], "iter": [2, 3, 9, 12, 16, 23, 24, 27], "submatrix": [2, 9], "row_constraint": [2, 9], "column_constraint": [2, 9], "insert_diagonal_entri": [2, 9], "fals": [2, 3, 8, 9, 19, 21, 24], "exactsparsematrixbuild": [2, 9], "builder": [2, 3, 5, 9, 17, 19, 21], "add_next_valu": [2, 9, 19, 21], "pycarl": [2, 3, 8, 9, 11, 29], "gmp": [2, 9], "ration": [2, 3, 6, 7, 8, 9, 10], "after": [2, 9, 14, 17, 24, 26, 29], "been": [2, 9, 11], "ad": [2, 9, 19, 21], "call": [2, 9, 18], "function": [2, 5, 6, 8, 9, 11, 16, 18, 27, 29], "mandatori": [2, 9], "note": [2, 9, 19, 21, 24, 25, 29], "linear": [2, 9], "setter": [2, 9], "That": [2, 9, 26], "must": [2, 9, 26], "consecut": [2, 9], "As": [2, 9, 11, 12, 16, 19, 24, 25, 26, 27], "multipl": [2, 5, 9, 12, 19, 23, 29], "per": [2, 9, 29], "admit": [2, 9], "method": [2, 9, 12, 19, 27], "mention": [2, 9], "same": [2, 9, 13, 19, 26, 29], "pair": [2, 9], "If": [2, 9, 19, 22, 27, 29], "skip": [2, 9, 27], "entir": [2, 9], "treat": [2, 9], "empti": [2, 9, 18, 19], "met": [2, 9], "thrown": [2, 9], "paramet": [2, 3, 5, 8, 9, 12, 22, 27], "doubl": [2, 3, 5, 9, 10], "specifi": [2, 8, 9, 19, 21, 22, 25, 29], "overridden_row_count": [2, 9], "overridden_column_count": [2, 9], "overridden": [2, 9], "row_group_count": [2, 9], "final": [2, 9, 12, 18, 19, 20, 21, 26], "get_current_row_group_count": [2, 9], "current": [2, 3, 7, 9, 16, 24, 29], "get_last_column": [2, 9], "most": [2, 9, 13, 15, 19, 25, 26, 27], "recent": [2, 9], "us": [2, 3, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 25, 26, 27, 29], "get_last_row": [2, 9], "new_row_group": [2, 9, 21], "starting_row": [2, 9], "replace_column": [2, 9], "replac": [2, 7, 9], "offset": [2, 9], "id": [2, 3, 5, 9, 16, 25, 27], "accord": [2, 3, 9, 16], "everi": [2, 9, 16, 18, 26], "afterward": [2, 9, 27], "std": [2, 9], "vector": [2, 5, 7, 9, 19, 23], "const": [2, 9], "exactsparsematrixentri": [2, 9], "set_valu": [2, 9], "exactsparsematrixrow": [2, 9], "explicitexactquantitativecheckresult": 2, "explicit": [2, 3, 9, 13, 23], "quantit": 2, "get_valu": [2, 27], "explicitmodelbuild": 2, "standardrewardmodel": 2, "export_lookup": 2, "explicitstatelookup": 2, "unsign": [2, 9], "export": [2, 3, 5, 17], "lookup": 2, "explicitmodelcheckerhintdoubl": 2, "acceler": 2, "checker": [2, 8, 27, 28], "set_compute_only_maybe_st": 2, "set_maybe_st": 2, "mayb": 2, "assum": [2, 27], "correct": [2, 29], "set_result_hint": 2, "result_hint": 2, "float": [2, 3, 5, 8, 9, 10], "set_scheduler_hint": 2, "scheduler_hint": 2, "close": 2, "optim": [2, 7], "explicitparametricmodelbuild": 2, "carl": [2, 3, 9, 29], "rationalfunct": [2, 3, 9], "factorizedpolynomi": [2, 3, 8, 9], "multivariatepolynomi": [2, 3, 9], "cln": [2, 3, 6, 8, 9], "cl_ra": [2, 3, 9], "monomialcompar": [2, 3, 9], "monomi": [2, 3, 9], "comparegradedlex": [2, 3, 9], "stdmultivariatepolynomialpolici": [2, 3, 9], "noreason": [2, 3, 9], "noalloc": [2, 3, 9], "explicitparametricquantitativecheckresult": 2, "factorizedrationalfunct": [2, 8, 9], "explicitparetocurvecheckresultdoubl": 2, "multiobject": 2, "explicitqualitativecheckresult": 2, "get_truth_valu": 2, "truth": 2, "explicitquantitativecheckresult": [2, 8], "state_descript": 2, "object": [2, 3, 7, 9, 26], "hold": [2, 9, 16], "And": [2, 9, 13, 16, 18, 19], "arg1": [2, 5, 9], "conjunct": [2, 9, 29], "disjunct": [2, 9], "divid": [2, 9], "eq": [2, 9], "iff": [2, 5, 6, 9], "impli": [2, 9], "minu": [2, 9], "modulo": [2, 9], "multipli": [2, 9], "neq": [2, 9], "Or": [2, 9], "plu": [2, 9], "ariti": [2, 9], "contains_vari": [2, 9], "ani": [2, 9, 21, 25, 26, 27, 29], "evaluate_as_bool": [2, 9], "evalu": [2, 9], "evaluate_as_doubl": [2, 9], "evaluate_as_int": [2, 9], "integ": [2, 9, 10, 16], "evaluate_as_r": [2, 9], "get_operand": [2, 9], "operandindex": [2, 9], "get_vari": [2, 9], "has_boolean_typ": [2, 9], "has_integer_typ": [2, 9], "has_rational_typ": [2, 9], "retriev": [2, 9], "associ": [2, 9, 19], "is_function_appl": [2, 9], "applic": [2, 7, 9, 25], "is_liter": [2, 9], "is_vari": [2, 9], "oper": [2, 3, 7, 9], "simplifi": [2, 8, 9], "substitut": [2, 7, 9, 25], "substitution_map": [2, 9], "create_boolean": [2, 9], "creat": [2, 3, 5, 8, 9, 10, 17, 18, 19, 20, 21, 26, 27, 29], "create_boolean_vari": [2, 9], "auxiliari": [2, 9], "create_integ": [2, 9], "create_integer_vari": [2, 9], "create_r": [2, 9], "create_rational_vari": [2, 9], "known": [2, 9, 19], "expressionpars": [2, 9], "pars": [2, 5, 9, 13, 17, 19, 27], "ignore_error": [2, 9], "set_identifier_map": [2, 9], "expressiontyp": [2, 9], "is_boolean": [2, 9], "is_integ": [2, 9], "is_rat": [2, 9], "polynomi": 2, "its": [2, 17, 25, 26], "factor": 2, "cach": 2, "_factorizationcach": 2, "coeffici": 2, "constant_part": 2, "deriv": [2, 8], "comput": [2, 3, 5, 9, 14, 15, 25], "gather_vari": 2, "is_const": 2, "is_on": 2, "underli": [2, 22, 25, 26, 27], "to_smt2": 2, "fraction": 2, "denomin": 2, "numer": [2, 9], "rational_funct": 2, "flatset": [2, 9], "pass": [2, 20, 27, 29], "program": [2, 9, 16, 22, 23, 24, 27], "insert": [2, 19], "insert_set": 2, "is_subset_of": 2, "clone": [2, 7, 9, 29], "is_bounded_until_formula": [2, 7], "is_eventually_formula": [2, 7], "is_multi_objective_formula": [2, 7], "is_probability_oper": [2, 7], "probabl": [2, 3, 7, 8, 9, 16, 19, 20, 21, 22, 23, 24, 25, 27], "is_reward_oper": [2, 7], "is_until_formula": [2, 7], "constants_map": [2, 7], "substitute_labels_by_label": [2, 7], "occur": [2, 7, 25], "globallyformula": [2, 7], "global": [2, 7, 9], "hybridexactquantitativecheckresult": 2, "hybridparametricquantitativecheckresult": 2, "hybridquantitativecheckresult": 2, "instantaneousrewardformula": [2, 7], "instantan": [2, 7], "itemlabel": [2, 9], "add_label": [2, 9, 18, 19, 21], "contains_label": [2, 9], "get_label": [2, 9, 27], "janiassign": [2, 9], "jani": [2, 5, 9, 13], "assign": [2, 9, 21], "janiautomaton": [2, 9], "A": [2, 9, 14, 15, 25, 28], "autom": [2, 9], "add_edg": [2, 9], "edg": [2, 9], "add_initial_loc": [2, 9], "add_loc": [2, 9], "locat": [2, 9, 26, 29], "return": [2, 3, 5, 6, 8, 9, 13, 18, 24, 26], "get_location_index": [2, 9], "initial_location_indic": [2, 9], "initial_states_restrict": [2, 9], "initi": [2, 3, 5, 9, 11, 12, 15, 16, 18, 22, 25, 27], "restrict": [2, 5, 9], "location_vari": [2, 9], "get_edge_index_set": [2, 9], "choice_index": [2, 9], "induc": [2, 9], "janiconst": [2, 9], "constant": [2, 8, 9, 22], "defin": [2, 9, 17, 19, 20, 21, 23, 24, 25], "some": [2, 5, 9, 12, 13, 14, 16, 17, 24, 25, 26, 27, 29], "janiedg": [2, 9], "action_index": [2, 9], "action": [2, 9, 13, 16, 19, 21, 23, 24, 26, 27], "color": [2, 9], "destin": [2, 9], "has_silent_act": [2, 9], "silent": [2, 9], "nr_destin": [2, 9], "nr": [2, 9, 14], "source_location_index": [2, 9], "sourc": [2, 5, 9, 23, 29], "template_edg": [2, 9], "templat": [2, 9], "janiedgedestin": [2, 9], "target_location_index": [2, 9], "janiinformationobject": [2, 9], "avg_var_domain_s": [2, 9], "model_typ": [2, 9, 13, 16, 24, 27], "nr_automata": [2, 9], "nr_edg": [2, 9], "nr_variabl": [2, 9], "state_domain_s": [2, 9], "janiloc": [2, 9], "janilocationexpand": [2, 9], "transform": [2, 9, 15, 24], "expand": [2, 9], "automaton_nam": [2, 5, 9], "variable_nam": [2, 9], "returntyp": [2, 9], "janimodel": [2, 5, 9], "add_automaton": [2, 9], "automaton": [2, 7, 9, 20], "uniqu": [2, 9], "add_const": [2, 9], "check_valid": [2, 9], "basic": [2, 3, 9, 27], "valid": [2, 9, 27], "decode_automaton_and_edge_index": [2, 9], "define_const": [2, 9], "encode_automaton_and_edge_index": [2, 9], "care": [2, 3, 9], "chang": [2, 9, 12, 16, 22], "data": [2, 9, 16], "structur": [2, 9, 10, 16, 22], "flatten_composit": [2, 9], "smt_solver_factori": [2, 9], "smtsolverfactori": [2, 9, 10], "0x7f27fa16deb0": [2, 9], "get_automaton": [2, 9], "get_automaton_index": [2, 9], "get_const": [2, 9], "global_vari": [2, 9], "has_standard_composit": [2, 9], "composit": [2, 9], "standard": [2, 5, 9, 13, 14, 22], "has_undefined_const": [2, 9], "flag": [2, 6, 7, 9, 29], "ha": [2, 9, 12, 13, 14, 16, 19, 23, 27], "undefin": [2, 9], "make_standard_compli": [2, 9], "make": [2, 9, 24, 29], "compliant": [2, 9], "remove_const": [2, 9], "constant_nam": [2, 9], "sure": [2, 9, 24, 29], "doe": [2, 9, 12, 22, 26, 29], "appear": [2, 9], "replace_automaton": [2, 9], "new_automaton": [2, 9], "restrict_edg": [2, 9], "edge_set": [2, 9], "set_model_typ": [2, 9], "janimodeltyp": [2, 9], "onli": [2, 7, 9, 15, 19, 20, 22, 23, 25, 26, 27], "set_standard_system_composit": [2, 9], "substitute_const": [2, 9], "substitute_funct": [2, 9], "to_dot": [2, 9], "undefined_constants_are_graph_preserv": [2, 9], "do": [2, 9, 23, 26, 27], "ctmdp": [2, 9], "lt": [2, 15], "ta": 2, "pta": 2, "sta": 2, "pha": 2, "sha": 2, "5": [2, 3, 6, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27], "10": [2, 9, 15, 16, 17, 19, 21, 24, 25, 26, 27], "6": [2, 3, 6, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29], "11": [2, 6, 9, 15, 16, 17, 19, 21, 24, 25, 26, 27], "8": [2, 3, 9, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27], "12": [2, 9, 15, 16, 17, 19, 20, 21, 24, 26, 27], "9": [2, 3, 9, 15, 16, 17, 19, 20, 21, 24, 26, 27], "7": [2, 3, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27], "janiorderedassign": [2, 9], "new_assign": [2, 9], "add_to_exist": [2, 9], "perform": [2, 3, 5, 9, 15], "deep": [2, 9], "copi": [2, 9], "rh": [2, 9], "janiscopechang": [2, 9], "local": [2, 9], "vice": [2, 9], "versa": [2, 9], "make_variables_loc": [2, 9], "janitemplateedg": [2, 9], "intern": [2, 9, 10, 16, 25, 26], "add_destin": [2, 9], "templateedgedestin": [2, 9], "janitemplateedgedestin": [2, 9], "janivari": [2, 9], "init_express": [2, 9], "janivariableset": [2, 9], "add_vari": [2, 9], "erase_vari": [2, 9], "get_variable_by_expr_vari": [2, 9], "get_variable_by_nam": [2, 9], "longrunavarageoper": [2, 7], "long": [2, 6, 7, 9], "run": [2, 7, 26, 29], "averag": [2, 7], "longrunaveragerewardformula": [2, 7], "maximalendcompon": [2, 9], "maxim": [2, 9], "compon": [2, 9, 18, 19, 20, 21], "mec": [2, 9], "maximalendcomponentdecomposition_doubl": [2, 9], "decomposit": [2, 9], "maximalendcomponentdecomposition_exact": [2, 9], "maximalendcomponentdecomposition_ratfunc": [2, 9], "minmaxmethod": 2, "min": [2, 9, 12, 15], "max": [2, 9, 12, 20], "policy_iter": 2, "value_iter": 2, "linear_program": 2, "rational_search": 2, "interval_iter": 2, "sound_value_iter": 2, "optimistic_value_iter": 2, "topological_cuda": 2, "minmaxsolverenviron": 2, "precis": 2, "modelformulaspair": 2, "modeltyp": [2, 8, 9, 13, 16, 24, 27], "multiobjectiveformula": [2, 7], "nr_subformula": [2, 7], "subformula": [2, 7], "nativelinearequationsolvermethod": [2, 12], "power_iter": [2, 12], "jacobi": 2, "sor": 2, "gauss_seidel": 2, "walker_cha": 2, "nativesolverenviron": 2, "maximum_iter": [2, 12], "operatorformula": [2, 7], "comparison_typ": [2, 7], "comparison": [2, 7, 15, 25], "has_bound": [2, 7], "has_optimality_typ": [2, 7], "present": [2, 7, 27], "optimality_typ": [2, 7], "remove_bound": [2, 7], "remove_optimality_typ": [2, 7], "set_bound": [2, 7], "set_optimality_typ": [2, 7], "new_optimality_typ": [2, 7], "optimizationdirect": [2, 7], "optimi": [2, 7], "clear": [2, 7], "threshold": [2, 7], "threshold_expr": [2, 7], "operatortyp": [2, 9], "xor": [2, 9], "power": [2, 9, 27], "equal": [2, 9, 12], "notequ": [2, 9], "lessorequ": [2, 9], "greaterorequ": [2, 9], "Not": [2, 9], "floor": [2, 9], "ceil": [2, 9], "Ite": [2, 9], "21": [2, 9, 24, 26], "13": [2, 9, 14, 15, 16, 19, 21, 24, 26, 27], "20": [2, 9, 15, 19, 24, 26, 27], "17": [2, 9, 24, 26, 27], "18": [2, 9, 17, 24, 26], "22": [2, 9, 21, 24], "15": [2, 6, 9, 24, 26, 27], "16": [2, 9, 24, 26, 27], "19": [2, 9, 24, 26], "14": [2, 9, 16, 21, 24, 26, 27], "minim": 2, "overlappingguardanalys": [2, 9], "smt": [2, 9, 10], "driven": [2, 9], "has_module_with_inner_action_overlapping_guard": [2, 9], "parametricchecktask": 2, "parametricsparsematrix": [2, 9], "parametricsparsematrixbuild": [2, 9], "parametricsparsematrixentri": [2, 9], "parametricsparsematrixrow": [2, 9], "paretocurvecheckresultdoubl": 2, "get_overapproxim": 2, "geometri": 2, "polytop": 2, "get_underapproxim": 2, "pathformula": [2, 7], "multivari": 2, "degre": 2, "nr_term": 2, "total_degre": 2, "polytopedoubl": [2, 9], "create_downward_closur": [2, 9], "get_vertices_clockwis": [2, 9], "vertic": [2, 9], "polytopeexact": [2, 9], "prismassign": [2, 9], "prism": [2, 9, 19, 22, 26, 27], "updat": [2, 9], "prismbooleanvari": [2, 9], "command": [2, 9, 27], "get_command_set": [2, 9], "prismcommand": [2, 9], "what": [2, 9, 27], "action_nam": [2, 9], "global_index": [2, 9], "guard_express": [2, 9], "is_label": [2, 9], "possess": [2, 9], "synchron": [2, 9], "prismconst": [2, 9], "definit": [2, 9], "prismintegervari": [2, 9], "lower_bound_express": [2, 9], "lower": [2, 9], "upper": [2, 9], "prismlabel": [2, 9], "prismmodeltyp": [2, 9], "prismmodul": [2, 9], "modul": [2, 3, 9, 24, 25], "boolean_vari": [2, 9], "get_boolean_vari": [2, 9], "booleanvari": [2, 9], "get_command_indices_by_action_index": [2, 9], "get_integer_vari": [2, 9], "integervari": [2, 9], "integer_vari": [2, 9], "prismprogram": [2, 9], "flatten": [2, 9], "smt_factori": [2, 9], "0x7f27fa16ee30": [2, 9], "put": [2, 9, 26], "singl": [2, 9, 25, 27], "get_action_nam": [2, 9], "requir": [2, 9, 24, 25, 26, 27, 28], "get_label_express": [2, 9], "get_modul": [2, 9], "module_nam": [2, 9], "get_module_indices_by_action_index": [2, 9], "particular": [2, 9, 25, 26, 27], "get_synchronizing_action_indic": [2, 9], "global_boolean_vari": [2, 9], "global_integer_vari": [2, 9], "hasundefinedconst": [2, 9], "has_const": [2, 9], "has_label": [2, 9], "is_deterministic_model": [2, 9], "describ": [2, 9, 14, 17, 19, 26], "determinist": [2, 3, 9, 16, 24, 27], "label_unlabelled_command": [2, 9], "name_suggest": [2, 9], "unlabel": [2, 9], "nr_modul": [2, 9], "number_of_unlabeled_command": [2, 9], "restrict_command": [2, 9], "reward_model": [2, 9, 19, 21, 23], "within": [2, 9], "substitute_formula": [2, 9], "substitute_nonstandard_pred": [2, 9], "nonstandard": [2, 9], "predic": [2, 9], "to_jani": [2, 9], "all_variables_glob": [2, 9], "suffix": [2, 9], "used_const": [2, 9], "prismrewardmodel": [2, 9], "declar": [2, 9, 13], "prismupd": [2, 9], "get_as_variable_to_expression_map": [2, 9], "represent": [2, 9, 12, 15, 19], "get_assign": [2, 9], "refer": [2, 9, 22, 23, 25, 26, 27, 29], "probability_express": [2, 9], "variou": [2, 9, 12, 13], "wai": [2, 9, 19, 27, 29], "also": [2, 9, 12, 13, 15, 22, 25, 26, 27, 29], "ident": [2, 9], "prismvari": [2, 9], "initial_value_express": [2, 9], "probabilityoper": [2, 7], "obtain": [2, 3, 22, 23, 24], "raw_formula": [2, 14], "directli": [2, 13, 14, 19, 22, 27, 29], "quotientformat": 2, "format": [2, 5, 13, 14, 15, 16, 17, 22, 23, 24, 25, 27], "quotient": 2, "wrap": 2, "nomin": 2, "rationalrf": 2, "alia": 2, "rewardoper": [2, 7], "has_reward_nam": [2, 7], "reward_nam": [2, 7], "smtcounterexamplegener": 2, "highlevel": 2, "counterexampl": 2, "backend": 2, "env": [2, 8, 12, 29], "stat": 2, "smtcounterexamplegeneratorstat": 2, "symbolic_model": [2, 15], "symbolicmodeldescript": 2, "cex_input": 2, "smtminimallabelsetgener": 2, "cexinput": 2, "dontcar": [2, 3], "smtcounterexamplegeneratoropt": 2, "precomput": 2, "add_backward_implication_cut": 2, "check_threshold_feas": 2, "continue_after_first_counterexampl": 2, "encode_reach": 2, "maximum_counterexampl": 2, "maximum_iterations_after_counterexampl": 2, "use_dynamic_constraint": 2, "analysis_tim": 2, "cut_tim": 2, "model_checking_tim": 2, "setup_tim": 2, "solver_tim": 2, "smtcounterexampleinput": 2, "add_reward_and_threshold": 2, "anoth": [2, 13, 23, 27], "schedulerchoicedoubl": [2, 9], "memori": [2, 9, 26], "dirac": [2, 9], "get_deterministic_choic": [2, 9, 24], "schedulerchoiceexact": [2, 9], "schedulerdoubl": [2, 9], "compute_action_support": [2, 9], "nondeterministic_choice_indic": [2, 9], "state_index": [2, 9], "memory_index": [2, 9], "schedulerchoic": [2, 9], "memory_s": [2, 9], "how": [2, 9, 17, 18, 23], "much": [2, 9], "take": [2, 9, 24, 26, 27, 29], "memoryless": [2, 9, 24], "schedulerexact": [2, 9], "simplevalu": [2, 9], "get_boolean_valu": [2, 9, 10], "get_integer_valu": [2, 9, 10], "to_json": [2, 9], "jsoncontainerr": [2, 9, 10], "convert": [2, 9], "json": [2, 3, 9, 10, 14], "solverenviron": 2, "minmax_solver_environ": 2, "native_solver_environ": [2, 12], "set_force_sound": 2, "forc": 2, "sound": 2, "set_linear_equation_solver_typ": [2, 12], "set_from_default": 2, "sparsectmc": [2, 8, 9, 18], "exit_r": [2, 9, 18, 20], "sparsedtmc": [2, 8, 9, 15, 19], "sparseexactctmc": [2, 9], "sparseexactdtmc": [2, 9], "sparseexactma": [2, 9], "apply_schedul": [2, 9], "drop_unreachable_st": [2, 9], "_sparseexactmodel": [2, 9], "appli": [2, 9, 27], "convert_to_ctmc": [2, 9], "convertible_to_ctmc": [2, 9], "can": [2, 3, 5, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "markovian_st": [2, 9, 20], "sparseexactmdp": [2, 9], "get_choice_index": [2, 9], "action_offset": [2, 9], "get_nr_available_act": [2, 9], "sparseexactmodelact": [2, 9], "sparseexactmodelcompon": [2, 9], "choice_label": [2, 9, 20, 21], "store": [2, 9, 17], "choice_origin": [2, 9], "rate_transit": [2, 9, 18, 21], "otherwis": [2, 9], "observability_class": [2, 9], "player1_matrix": [2, 9], "player": [2, 9], "need": [2, 9, 21, 22, 26, 29], "game": [2, 9], "interpret": [2, 9, 18, 27], "state_label": [2, 9, 18, 19, 20, 21], "state_valu": [2, 9], "belong": [2, 9], "transition_matrix": [2, 9, 18, 19, 20, 21], "sparseexactmodelst": [2, 9], "sparseexactpomdp": [2, 9], "get_observ": [2, 9], "has_observation_valu": [2, 9], "nr_observ": [2, 9, 16], "observation_valu": [2, 9], "sparseexactrewardmodel": [2, 9], "get_state_action_reward": [2, 9], "get_state_reward": [2, 9], "get_zero_reward_st": [2, 9], "where": [2, 5, 9, 19, 21, 24, 27], "has_state_action_reward": [2, 9, 23], "has_state_reward": [2, 9, 23], "has_transition_reward": [2, 9, 23], "reduce_to_state_based_reward": [2, 9], "only_state_reward": [2, 9], "reduc": [2, 9], "base": [2, 4, 8, 9, 10, 16, 25], "set_state_reward": [2, 9], "state_action_reward": [2, 9, 23], "state_reward": [2, 9], "transition_reward": [2, 9], "sparsema": [2, 8, 9, 20], "_sparsemodel": [2, 3, 9], "sparsematrixbuild": [2, 9, 19, 20, 21], "sparsematrixentri": [2, 9], "sparsematrixrow": [2, 9], "sparsemdp": [2, 8, 9, 21], "sparsemodelact": [2, 9], "sparsemodelcompon": [2, 9, 18, 19, 20, 21], "sparsemodelst": [2, 9], "sparseparametricctmc": [2, 8, 9], "pctmc": [2, 8, 9], "sparseparametricdtmc": [2, 8, 9], "pdtmc": [2, 8, 9], "sparseparametricma": [2, 8, 9], "pma": [2, 8, 9], "_sparseparametricmodel": [2, 3, 8, 9], "sparseparametricmdp": [2, 8, 9], "pmdp": [2, 8, 9], "sparseparametricmodelact": [2, 9], "sparseparametricmodelst": [2, 9], "sparseparametricpomdp": [2, 9], "sparseparametricrewardmodel": [2, 9], "sparsepomdp": [2, 9], "sparserewardmodel": [2, 9, 19, 21], "stateformula": [2, 7], "statelabel": [2, 9, 18, 19], "add_label_to_st": [2, 9, 18, 19], "get_labels_of_st": [2, 9, 26], "get_stat": [2, 9, 10, 19], "has_state_label": [2, 9], "set_stat": [2, 9, 19], "statevalu": [2, 9], "get_json": [2, 9], "selected_vari": [2, 9], "get_nr_of_st": [2, 9], "get_rational_valu": [2, 9, 10], "get_str": [2, 9], "pretti": [2, 9], "statevaluationfunctionactionmaskdoubl": 2, "statevaluationsbuild": [2, 9], "add_stat": [2, 9], "boolean_valu": [2, 9], "integer_valu": [2, 9], "rational_valu": [2, 9], "more": [2, 9, 12, 14, 16, 19, 21, 26, 27, 29], "stormerror": [2, 4, 8], "messag": [2, 4, 8], "subsystembuilderopt": 2, "construct": [2, 5, 13, 17, 19, 21, 27], "build_action_map": 2, "build_kept_act": 2, "build_state_map": 2, "check_transitions_outsid": 2, "fix_deadlock": 2, "subsystembuilderreturntypedoubl": 2, "deadlock_label": 2, "deadlock": [2, 5, 18, 19, 20, 21, 27], "introduc": 2, "kept_act": 2, "avail": [2, 16, 21, 25, 26, 29], "submodel": 2, "new_to_old_action_map": 2, "new_to_old_state_map": 2, "subsystembuilderreturntypeexact": 2, "subsystembuilderreturntyperatfunc": 2, "symbolicexactquantitativecheckresult": 2, "as_jani_model": 2, "as_prism_program": 2, "instantiate_const": 2, "constant_definit": [2, 5], "is_jani_model": 2, "is_prism_program": 2, "parse_constant_definit": 2, "symbolicparametricquantitativecheckresult": 2, "symbolicqualitativecheckresult": 2, "ddtype": 2, "symbolicquantitativecheckresult": 2, "symbolicsylvanctmc": [2, 9], "symbolicsylvandtmc": [2, 9, 15], "symbolicsylvanma": [2, 9], "symbolicsylvanmdp": [2, 9], "symbolicsylvanparametricctmc": [2, 9], "symbolicsylvanparametricdtmc": [2, 9], "symbolicsylvanparametricma": [2, 9], "symbolicsylvanparametricmdp": [2, 9], "symbolicsylvanparametricrewardmodel": [2, 9], "symbolicsylvanrewardmodel": [2, 9], "timeoper": [2, 7], "unarybooleanstateformula": [2, 7], "unari": [2, 7], "unarypathformula": [2, 7], "one": [2, 7, 15, 16, 19, 20, 21, 22, 27], "unarystateformula": [2, 7], "untilformula": [2, 7], "unbound": [2, 7], "is_no_vari": 2, "rank": 2, "build_model": [2, 3, 12, 13, 16, 23, 24, 25, 26, 27], "symbolic_descript": 2, "dure": [2, 3, 13], "build_model_from_drn": [2, 13], "file": [2, 3, 5, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 29], "build_parametric_model": [2, 22], "build_parametric_model_from_drn": [2, 13], "build_parametric_sparse_matrix": [2, 9], "arrai": [2, 6, 9, 18, 19, 20], "row_group_indic": [2, 9], "numpi": [2, 9, 18, 19, 20, 29], "ascend": [2, 9, 19, 20], "order": [2, 9, 11, 19, 20, 22, 25, 27], "build_sparse_exact_model_with_opt": 2, "model_descript": 2, "use_jit": 2, "doctor": 2, "modelbas": 2, "build_sparse_matrix": [2, 9, 18, 19, 20], "build_sparse_model": [2, 15], "build_sparse_model_from_explicit": 2, "transition_fil": 2, "labeling_fil": 2, "state_reward_fil": 2, "transition_reward_fil": 2, "choice_labeling_fil": 2, "build_sparse_model_with_opt": [2, 26], "build_sparse_parametric_model": 2, "build_sparse_parametric_model_with_opt": 2, "build_symbolic_model": [2, 12, 15], "build_symbolic_parametric_model": 2, "check_model_dd": [2, 15], "only_initial_st": 2, "param": [2, 5, 8, 9], "rtype": [2, 5], "checkresult": 2, "check_model_hybrid": [2, 15], "check_model_spars": [2, 15], "extract_schedul": [2, 24], "force_fully_observ": 2, "try": 2, "extract": [2, 24], "collect_inform": [2, 9], "compute_all_until_prob": 2, "arg2": 2, "arg3": 2, "arg4": 2, "forward": 2, "compute_expected_number_of_visit": 2, "expect": [2, 23], "visit": [2, 25], "compute_prob01_st": 2, "phi_stat": 2, "psi_stat": 2, "prob01": 2, "form": [2, 14, 19, 22], "target": [2, 5, 19, 25], "compute_prob01max_st": 2, "compute_prob01min_st": 2, "compute_transient_prob": 2, "transient": 2, "construct_submodel": 2, "keep_unreachable_st": 2, "reachabl": [2, 24, 27], "fewer": 2, "create_filter_initial_states_spars": 2, "_qualitativecheckresult": 2, "filter": [2, 12, 15], "create_filter_initial_states_symbol": [2, 12, 15], "create_filter_symbol": 2, "eliminate_ec": 2, "possible_ec": 2, "add_sink_row_st": 2, "add_self_loop_at_sink_st": 2, "we": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "redirect": 2, "incom": 2, "outgo": [2, 8, 19, 27], "mani": 2, "kept": 2, "lead": [2, 25], "outsid": 2, "possibli": 2, "yield": [2, 13, 25, 26], "furthermor": [2, 11], "least": 2, "selfloop": 2, "remain": [2, 19, 21], "eliminate_non_markovian_chain": 2, "label_behavior": 2, "well": [2, 22, 29], "eliminate_reward_accumul": [2, 9], "accumul": [2, 9, 25], "export_to_drn": 2, "get_maximal_end_compon": [2, 9], "get_reachable_st": 2, "initial_st": [2, 15, 16, 22, 23, 27], "constraint_st": 2, "target_st": 2, "maximal_step": 2, "choice_filt": 2, "absorb": [2, 26], "depth": [2, 3, 27], "install_signal_handl": 2, "make_sparse_model_build": 2, "action_mask": 2, "actionmask": 2, "instanc": [2, 17, 25], "make_sparse_model_builder_exact": 2, "make_sparse_model_builder_parametr": 2, "model_check": [2, 12, 22, 23, 24, 27], "parse_jani_model": [2, 13], "parse_jani_model_from_str": 2, "json_str": [2, 3], "parse_prism_program": [2, 12, 15, 16, 22, 23, 24, 25, 26, 27], "prism_compat": 2, "parse_properti": [2, 12, 14, 15, 22, 23, 24, 27], "context": 2, "pctl": 2, "mean": [2, 14, 16, 21, 22, 26, 27], "parse_properties_for_jani_model": 2, "formula_str": [2, 12, 14, 22, 24, 27], "jani_model": [2, 5], "property_filt": 2, "parse_properties_for_prism_program": [2, 16, 24], "prism_program": [2, 12, 15, 22, 25, 26, 27], "allow": [2, 12, 22], "parse_properties_without_context": 2, "perform_bisimul": 2, "bisimulation_typ": 2, "perform_sparse_bisimul": 2, "perform_symbolic_bisimul": 2, "quotient_format": 2, "preprocess_symbolic_input": 2, "symbolic_model_descript": 2, "constant_definition_str": 2, "preprocess": 2, "symobl": 2, "prob01max_st": 2, "eventually_formula": 2, "prob01min_st": 2, "reset_timeout": 2, "reset": [2, 3, 10], "timeout": 2, "set_set": 2, "argument": [2, 8, 26], "set_timeout": 2, "second": [2, 21], "topological_sort": 2, "backward": [2, 25], "transform_to_discrete_time_model": [2, 24], "transform_to_sparse_model": [2, 15], "approximationheurist": 3, "heurist": 3, "select": [3, 27], "next": [3, 14, 17, 19, 24, 25], "bounddiffer": 3, "dftbe_doubl": 3, "event": 3, "dftbe_ratfunc": 3, "dftdependency_doubl": 3, "depend": [3, 16, 29], "dftdependency_ratfunc": 3, "dftelementtyp": 3, "BE": 3, "vot": 3, "pand": 3, "por": 3, "spare": 3, "pdep": 3, "seq": 3, "mutex": 3, "dftelement_doubl": 3, "element": [3, 5, 14, 27], "dftelement_ratfunc": 3, "dftinstanti": 3, "dft_doubl": 3, "concret": 3, "dftsimulator_doubl": 3, "simul": 3, "trace": 3, "dftstate_doubl": 3, "random_step": 3, "simulationresult": 3, "random": [3, 26], "simulate_trac": 3, "timebound": 3, "complet": 3, "next_failur": 3, "failableel": 3, "dependency_success": 3, "determin": [3, 24], "wa": 3, "success": [3, 25], "dftsimulator_ratfunc": 3, "dftstate_ratfunc": 3, "dftstateinfo": 3, "don": 3, "t": [3, 14], "failabl": 3, "fail": [3, 14], "failsaf": 3, "safe": 3, "invalid": 3, "spare_us": 3, "spare_id": 3, "child": 3, "statu": [3, 21], "dft_ratfunc": 3, "dftsymmetri": 3, "symmetri": 3, "can_have_nondetermin": 3, "get_el": 3, "dftelement": 3, "get_element_by_nam": 3, "modularis": 3, "split": 3, "independ": [3, 26, 29], "nr_be": [3, 14], "nr_dynam": [3, 14], "nr_element": [3, 14], "total": 3, "set_relevant_ev": 3, "relevant_ev": 3, "relevantev": 3, "allow_dc_for_revel": 3, "state_generation_info": 3, "dftindependentsymmetri": 3, "dftstategenerationinfo": 3, "top_level_el": 3, "top": [3, 14], "level": [3, 10, 13, 14, 16, 27], "explicitdftmodelbuilder_doubl": 3, "approximation_threshold": 3, "approximation_heurist": 3, "space": [3, 27], "get_model": 3, "get_partial_model": 3, "lower_bound": 3, "expected_tim": 3, "explicitdftmodelbuilder_ratfunc": 3, "due_depend": 3, "failur": [3, 14], "due": [3, 29], "get_fail_be_doubl": 3, "get_fail_be_ratfunc": 3, "failableiter": 3, "randomgener": 3, "seed": [3, 26], "relev": [3, 24, 27], "is_relev": 3, "unsuccess": 3, "analyze_dft": [3, 14], "ft": 3, "symr": 3, "allow_modularis": 3, "allow_dc_for_relev": 3, "compute_dependency_conflict": 3, "use_smt": 3, "solver_timeout": 3, "compute_relevant_ev": 3, "additional_relevant_nam": 3, "export_dft_json_fil": 3, "export_dft_json_str": 3, "export_parametric_dft_json_fil": 3, "export_parametric_dft_json_str": 3, "get_paramet": 3, "is_well_form": 3, "check_valid_for_analysi": 3, "load_dft_galileo_fil": [3, 14], "galileo": [3, 14], "load_dft_json_fil": [3, 14], "load_dft_json_str": [3, 14], "load_parametric_dft_galileo_fil": 3, "load_parametric_dft_json_fil": 3, "load_parametric_dft_json_str": 3, "prepare_for_analysi": 3, "transform_dft": 3, "unique_constant_b": 3, "binary_fdep": 3, "exponential_distribut": 3, "export_gspn_pnml_fil": [5, 17], "filepath": 5, "pnml": [5, 17], "export_gspn_pnpro_fil": [5, 17], "pnpro": [5, 17], "get_immediate_transit": 5, "immediatetransit": 5, "immedi": [5, 8, 17], "get_initial_mark": 5, "mark": 5, "get_nam": [5, 17], "get_number_of_immediate_transit": [5, 17], "get_number_of_plac": [5, 17], "place": [5, 17], "get_number_of_timed_transit": [5, 17], "get_partit": 5, "transitionpartit": 5, "partit": [5, 6], "get_plac": 5, "arg": [5, 8], "kwarg": [5, 8], "overload": [5, 8], "uint64_t": 5, "get_timed_transit": 5, "timedtransit": 5, "get_transit": 5, "immediate_transition_id_to_transition_id": 5, "is_valid": 5, "set_nam": [5, 17], "timed_transition_id_to_transition_id": 5, "transition_id_to_immediate_transition_id": 5, "transition_id_to_timed_transition_id": 5, "gspnbuilder": [5, 17], "add_immediate_transit": [5, 17], "prioriti": 5, "weight": 5, "add_inhibition_arc": [5, 17], "inhibit": [5, 17], "arc": [5, 17], "uint_64_t": 5, "goe": 5, "default": [5, 15, 18, 27, 29], "add_input_arc": [5, 17], "add_normal_arc": 5, "both": [5, 12, 26, 27, 29], "output": [5, 17], "conveni": [5, 26], "textual": 5, "add_output_arc": [5, 17], "add_plac": [5, 17], "capac": 5, "initial_token": 5, "add_timed_transit": [5, 17], "num_serv": 5, "build_gspn": [5, 17], "constants_substitut": 5, "set_place_layout_info": [5, 17], "place_id": 5, "layout_info": 5, "layoutinfo": [5, 17], "layout": [5, 17], "set_transition_layout_info": [5, 17], "transition_id": 5, "gspnparser": [5, 17], "filenam": 5, "gspntojanibuild": 5, "gspn_automaton": 5, "create_deadlock_properti": 5, "get_weight": 5, "no_weight_attach": 5, "attach": 5, "set_weight": 5, "rotat": 5, "x": [5, 22, 26, 27], "y": [5, 26, 27], "get_capac": 5, "token": 5, "get_id": 5, "get_number_of_initial_token": 5, "has_restricted_capac": 5, "set_capac": 5, "cap": 5, "set_number_of_initial_token": 5, "get_number_of_serv": 5, "server": 5, "get_rat": 5, "has_infinite_server_semant": 5, "semant": [5, 26], "has_k_server_semant": 5, "has_single_server_semant": 5, "set_infinite_server_semant": 5, "set_k_server_semant": 5, "k": [5, 10, 25, 26], "set_rat": 5, "set_single_server_semant": 5, "exists_inhibition_arc": 5, "connect": 5, "via": [5, 8, 14, 17, 19, 20, 26], "exists_input_arc": 5, "exists_output_arc": 5, "fire": 5, "get_inhibition_arc_multipl": 5, "get_inhibition_plac": 5, "get_input_arc_multipl": 5, "get_input_plac": 5, "get_output_arc_multipl": 5, "get_output_plac": 5, "get_prior": 5, "is_en": 5, "enabl": 5, "remove_inhibition_arc": 5, "remove_input_arc": 5, "remove_output_arc": 5, "set_inhibition_arc_multipl": 5, "set_input_arc_multipl": 5, "set_output_arc_multipl": 5, "go": [5, 16, 21, 26, 27], "set_prior": 5, "nr_transit": [5, 15, 27], "version": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "build_info": 6, "compil": 6, "linux": 6, "1014": 6, "azur": 6, "gcc": 6, "o3": 6, "dndebug": 6, "fprefetch": 6, "loop": [6, 19, 25, 27], "flto": 6, "fomit": 6, "frame": 6, "pointer": [6, 27], "develop": [6, 11, 29], "dev": 6, "205": [6, 24], "commit": [6, 29], "revis": 6, "f37f477bc9995b9fa566dda20dd954e293497944": 6, "clean": [6, 29], "major": 6, "minor": 6, "patch": 6, "short": [6, 29], "storm_exact_use_cln": 6, "arithmet": 6, "storm_ratfunc_use_cln": 6, "storm_vers": 6, "dtmcparameterliftingmodelcheck": 8, "region": 8, "get_bound_all_st": 8, "parameterregion": 8, "maximis": 8, "mdpparameterliftingmodelcheck": 8, "mpd": 8, "modelinstanti": 8, "pctmcexactinstantiationcheck": 8, "_checkresult": 8, "set_graph_preserv": 8, "pctmcinstantiationcheck": 8, "pctmcinstanti": 8, "pdtmcexactinstantiationcheck": 8, "pdtmcinstantiationcheck": 8, "pdtmcinstanti": [8, 22], "pmainstanti": 8, "pmdpexactinstantiationcheck": 8, "pmdpinstantiationcheck": 8, "pmdpinstanti": 8, "area": 8, "create_from_str": 8, "region_str": 8, "splitting_threshold": 8, "partialpctmcinstanti": 8, "partialpdtmcinstanti": 8, "partialpmainstanti": 8, "partialpmdpinstanti": 8, "regionmodelcheck": 8, "paramat": 8, "lift": 8, "check_region": 8, "hypothesi": 8, "regionresulthypothesi": 8, "unknown": [8, 10, 26], "initialresult": 8, "regionresult": 8, "samplevertic": 8, "get_bound": 8, "get_split_suggest": 8, "estim": 8, "generate_splitting_estim": 8, "allow_model_simplif": 8, "existssat": 8, "existsviol": 8, "existsboth": 8, "centersat": 8, "centerviol": 8, "allsat": 8, "allviol": 8, "__str__": 8, "handl": 8, "create_region_check": 8, "preconditions_validated_manu": 8, "gather_deriv": 8, "var": 8, "gather": 8, "simplify_model": 8, "has_bitvector_typ": 9, "has_numerical_typ": 9, "jsoncontainerdoubl": 10, "matrixformat": 10, "straight": 10, "i_minus_p": 10, "modelrefer": 10, "lightweight": 10, "wrapper": 10, "around": 10, "distanc": [10, 25], "predecessork": 10, "predecessornod": 10, "shortestpathsgener": [10, 25], "get_dist": [10, 25], "get_path_as_list": [10, 25], "smtcheckresult": 10, "sat": 10, "unsat": 10, "smtsolver": 10, "addconstraint": 10, "pop": 10, "push": 10, "factori": 10, "z3smtsolver": 10, "z3": 10, "z3smtsolverfactori": 10, "millisecond": 10, "stormpi": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "extens": 11, "consequ": 11, "contribut": 11, "significantli": 11, "offer": 11, "python": [11, 27, 28, 29], "bind": [11, 28], "themselv": 11, "lexicograph": 11, "sebastian": 11, "jung": 11, "matthia": 11, "volk": 11, "receiv": 11, "signific": 11, "tom": 11, "janson": 11, "hannah": 11, "merten": 11, "would": [11, 27], "like": [11, 20, 27], "thank": 11, "harold": 11, "bruintj": 11, "follow": [11, 17, 18, 19, 21, 22, 23, 27, 29], "peopl": [11, 27], "help": [11, 16, 29], "u": [11, 25, 26, 27], "chronolog": 11, "nil": 11, "jansen": 11, "earli": 11, "adopt": 11, "feedback": 11, "murat": 11, "cubuktep": 11, "interact": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "approach": 12, "section": [12, 16, 18, 20, 23], "alwai": [12, 23], "import": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "exampl": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "prism_dtmc_di": [12, 15, 22, 23, 25, 26, 27], "p": [12, 15, 22, 27, 29], "f": [12, 14, 15, 16, 22, 23, 24, 26, 27], "": [12, 18, 19, 20, 21, 22, 24, 26, 27], "d": [12, 22, 26, 27], "02": [12, 16, 17, 22, 24, 27], "py": [12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29], "instead": [12, 15, 19, 21, 27], "built": [12, 13, 29], "To": [12, 15, 16, 18, 19, 21, 24, 27, 29], "access": [12, 26], "assert": [12, 23, 24, 27], "Then": [12, 26, 29], "notic": [12, 13, 27], "besid": 12, "combin": [12, 15], "them": [12, 27], "yet": [12, 24], "document": [12, 13], "03": [12, 16, 22, 27], "reconsid": 12, "vari": 12, "e": [12, 16, 19, 20, 25, 26, 29], "g": [12, 16, 19, 25, 26, 29], "off": 12, "actual": [12, 15], "likewis": 12, "see": [12, 25, 27], "wide": 13, "rang": [13, 15, 19, 21, 25, 26], "moreov": [13, 27], "drn_ctmc_dft": 13, "warn": 13, "directencodingpars": 13, "cpp": 13, "119": [13, 24], "No": 13, "now": [13, 16, 17, 18, 20, 23, 25, 26, 27, 29], "futur": 13, "might": [13, 27, 29], "drn_pdtmc_die": 13, "These": [13, 23, 27], "high": [13, 26, 27], "done": [13, 16, 19, 21, 23, 26, 27], "first": [13, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 29], "jani_dtmc_di": 13, "jani_program": 13, "In": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "embed": 13, "01": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "custom": [14, 20, 21], "simpl": [14, 18, 25, 27], "gate": 14, "path_json": 14, "dft_json_and": 14, "dft_small": 14, "bes2": 14, "complex": 14, "path_galileo": 14, "dft_galileo_hec": 14, "displai": [14, 17, 25], "common": [14, 25], "statist": 14, "BEs": 14, "23": [14, 24, 26], "here": [14, 19, 20, 21, 26, 27], "our": [14, 17, 20, 27, 29], "mttf": 14, "2f": 14, "363": 14, "89": [14, 24], "detail": [15, 27], "provid": [15, 19, 27], "found": [15, 16, 20, 27], "websit": [15, 27], "so": [15, 25, 27], "far": 15, "sparse_model": 15, "39": [15, 24, 26, 27], "gt": [15, 18, 19, 20, 21, 26], "nr_state": [15, 27], "sparse_result": 15, "16666666666666666": 15, "diagram": 15, "symbolic_result": 15, "16666650772094727": 15, "It": [15, 19, 22, 25, 29], "transformed_model": 15, "third": 15, "deem": 15, "suitabl": [15, 29], "hybrid_result": 15, "166667": 15, "often": [16, 25, 26], "testb": 16, "essenti": 16, "transfer": 16, "low": 16, "other": [16, 22], "own": 16, "discuss": [16, 23, 26, 27], "briefli": 16, "doctest": 16, "ellipsis_mark": 16, "etc": 16, "prism_mdp_maz": 16, "prop": [16, 23], "r": [16, 23], "goal": 16, "befor": [16, 21, 22, 24, 26, 27, 29], "sever": [16, 27], "07692307692307693": 16, "debug": [16, 29], "encod": 16, "featur": 16, "highlevel_model": 16, "extend": [16, 19, 21, 29], "thu": [16, 19, 27], "prism_pomdp_maz": 16, "inde": [16, 25, 26, 27], "code": [16, 27], "abov": [16, 26, 27], "addition": [16, 17, 18], "just": [16, 27], "import_path": 17, "gspn_pnml_simpl": 17, "gspn_parser": 17, "simple_gspn": 17, "my_gspn": 17, "posit": 17, "it_1": 17, "it_layout": 17, "tt_1": 17, "tt_layout": 17, "place_1": 17, "p1_layout": 17, "place_2": 17, "p2_layout": 17, "link": 17, "save": 17, "export_path": 17, "gspn_pnpro_simpl": 17, "write": 17, "opt": 17, "lib": 17, "gspn_simpl": 17, "explain": [18, 27, 29], "similar": [18, 19, 22, 25], "equip": [18, 19], "np": [18, 20], "dtype": [18, 20], "float64": [18, 20], "analog": [18, 23], "previou": [18, 19, 20, 21], "init": [18, 19, 20, 21, 26, 27], "full": [18, 20], "lastli": [18, 19], "includ": [18, 23, 25], "let": [18, 25, 26, 27], "item": [18, 19, 20, 21, 26], "without": [19, 26], "knuth": [19, 21], "yao": [19, 21], "die": [19, 21, 23], "begin": [19, 20], "force_dimens": [19, 21], "has_custom_row_group": [19, 21], "later": [19, 23, 27], "revisit": 19, "nondeterminist": [19, 21], "librari": [19, 20, 29], "http": [19, 29], "org": 19, "proposit": 19, "three": [19, 21, 22, 25, 27], "four": [19, 20, 21, 27], "five": [19, 20, 21, 26, 27], "six": [19, 21, 27], "asoci": 19, "bit": 19, "satisfi": 19, "acquir": 19, "coin_flip": [19, 21, 23, 26], "action_reward": [19, 21], "optional_state_action_reward_vector": [19, 21], "alreadi": 20, "saw": 20, "probabilist": [20, 27, 28], "small": [20, 27], "sinc": [20, 21], "cover": 20, "omit": [20, 21], "when": [20, 23], "successor": [20, 27], "respect": [20, 21], "st": 20, "alpha": 20, "beta": 20, "fair": 21, "want": [21, 24, 25, 29], "nondeterminst": 21, "row_group": 21, "than": [21, 26], "becaus": 21, "therefor": [21, 29], "With": [21, 26, 27], "got": 21, "seen": [21, 27], "focu": 21, "distinguish": 21, "those": [21, 25, 27], "b": 21, "recal": 21, "length": 21, "coincid": 21, "open": 22, "influenc": 22, "topologi": 22, "collect_probability_paramet": 22, "dictionari": 22, "point": [22, 24], "instantiated_model": 22, "free": 22, "case": [22, 25, 26, 27, 29], "func": 22, "show": 22, "implement": [22, 25, 26], "mainli": 23, "look": 23, "again": 23, "talk": 23, "len": [23, 26, 27], "round": 23, "666667": 23, "reward_model_nam": 23, "kei": 23, "come": [23, 27], "fashion": 23, "notion": 24, "polici": 24, "realiz": 24, "prism_mdp_coin_2_2": 24, "pmin": 24, "finish": 24, "all_coins_equal_1": 24, "has_schedul": 24, "___________________________________________________________________": 24, "fulli": 24, "24": 24, "25": 24, "26": 24, "27": 24, "28": 24, "29": 24, "30": 24, "31": 24, "32": 24, "33": 24, "34": [24, 26], "35": 24, "36": 24, "37": 24, "38": 24, "40": 24, "41": 24, "42": [24, 26], "43": 24, "44": 24, "45": 24, "46": 24, "47": 24, "48": 24, "49": 24, "50": 24, "51": 24, "52": 24, "53": 24, "54": 24, "55": 24, "56": 24, "57": 24, "58": 24, "59": 24, "60": 24, "61": 24, "62": 24, "63": 24, "64": 24, "65": 24, "66": 24, "67": 24, "68": 24, "69": 24, "70": 24, "71": 24, "72": 24, "73": 24, "74": 24, "75": 24, "76": 24, "77": 24, "78": 24, "79": 24, "80": 24, "81": 24, "82": 24, "83": 24, "84": 24, "85": 24, "86": 24, "87": 24, "88": 24, "90": 24, "91": 24, "92": 24, "93": 24, "94": 24, "95": 24, "96": 24, "97": 24, "98": 24, "99": 24, "100": [24, 26], "101": 24, "102": 24, "103": 24, "104": 24, "105": 24, "106": 24, "107": 24, "108": 24, "109": 24, "110": 24, "111": 24, "112": 24, "113": 24, "114": 24, "115": 24, "116": 24, "117": 24, "118": 24, "120": 24, "121": 24, "122": 24, "123": 24, "124": 24, "125": [24, 25], "126": 24, "127": 24, "128": 24, "129": 24, "130": 24, "131": 24, "132": 24, "133": 24, "134": 24, "135": 24, "136": 24, "137": 24, "138": 24, "139": 24, "140": 24, "141": 24, "142": 24, "143": 24, "144": 24, "145": 24, "146": 24, "147": 24, "148": 24, "149": 24, "150": 24, "151": 24, "152": 24, "153": 24, "154": 24, "155": 24, "156": 24, "157": 24, "158": 24, "159": 24, "160": 24, "161": 24, "162": 24, "163": 24, "164": 24, "165": 24, "166": 24, "167": 24, "168": 24, "169": 24, "170": 24, "171": 24, "172": 24, "173": 24, "174": 24, "175": 24, "176": 24, "177": 24, "178": 24, "179": 24, "180": 24, "181": 24, "182": 24, "183": 24, "184": 24, "185": 24, "186": 24, "187": 24, "188": 24, "189": 24, "190": 24, "191": 24, "192": 24, "193": 24, "194": 24, "195": 24, "196": 24, "197": 24, "198": 24, "199": 24, "200": 24, "201": 24, "202": 24, "203": 24, "204": 24, "206": 24, "207": 24, "208": 24, "209": 24, "210": 24, "211": 24, "212": 24, "213": 24, "214": 24, "215": 24, "216": 24, "217": 24, "218": 24, "219": 24, "220": 24, "221": 24, "222": 24, "223": 24, "224": 24, "225": 24, "226": 24, "227": 24, "228": 24, "229": 24, "230": 24, "231": 24, "232": 24, "233": 24, "234": 24, "235": 24, "236": 24, "237": 24, "238": 24, "239": 24, "240": 24, "241": 24, "242": 24, "243": 24, "244": 24, "245": 24, "246": 24, "247": 24, "248": 24, "249": 24, "250": 24, "251": 24, "252": 24, "253": 24, "254": 24, "255": 24, "256": 24, "257": 24, "258": 24, "259": 24, "260": 24, "261": 24, "262": 24, "263": 24, "264": 24, "265": 24, "266": 24, "267": 24, "268": 24, "269": 24, "270": 24, "271": 24, "choos": [24, 25], "simpli": 24, "howev": [24, 27], "circumv": 24, "lack": 24, "prism_ma_simpl": 24, "tmin": 24, "lost": 24, "mdp_formula": 24, "shown": [24, 26], "enumer": 25, "along": 25, "sub": 25, "recurs": 25, "jm1999": 25, "why": 25, "find": [25, 29], "7th": 25, "1st": 25, "through": [25, 26, 28], "6th": 25, "precursor": 25, "8th": 25, "effici": 25, "crucial": 25, "elig": 25, "repeatedli": 25, "travers": 25, "practic": 25, "larg": 25, "sequenc": 25, "interest": [25, 27], "rather": [25, 26], "unfortun": [25, 29], "state_id": 25, "observe0greater1": 25, "simplic": 25, "stick": 25, "spg": 25, "queri": 25, "3rd": 25, "inspect": 25, "03125": 25, "0078125": 25, "you": [25, 27, 29], "v\u00edctor": 25, "m": [25, 26], "jim\u00e9nez": 25, "andr\u00e9": 25, "marzal": 25, "experiment": 25, "workshop": 25, "1999": 25, "mimic": 26, "thei": 26, "abstract": 26, "expos": 26, "user": 26, "fast": [26, 29], "limit": 26, "interfac": 26, "nondetermin": 26, "create_simul": 26, "restart": 26, "tripl": 26, "reflect": 26, "s0": 26, "s2": 26, "s5": 26, "s11": 26, "inbetween": 26, "sampl": 26, "leav": 26, "never": 26, "detect": 26, "is_don": 26, "potenti": 26, "final_outcom": 26, "n": 26, "els": 26, "advantag": 26, "becom": 26, "annot": 26, "set_observation_mod": 26, "simulatorobservationmod": 26, "program_level": 26, "get_reward_nam": 26, "join": 26, "v": 26, "explicitli": 26, "resolv": 26, "extern": 26, "pick": 26, "randomli": 26, "intellig": 26, "manner": 26, "prism_mdp_slipgrid": 26, "available_act": 26, "select_act": 26, "randint": 26, "append": 26, "act": 26, "break": 26, "meaning": 26, "move": [26, 29], "north": 26, "east": 26, "west": 26, "south": 26, "grid": 26, "set_action_mod": 26, "simulatoractionmod": 26, "global_nam": 26, "instruct": 27, "instal": [27, 28], "intend": 27, "understand": 27, "verif": 27, "further": 27, "literatur": 27, "veri": 27, "concept": 27, "refrain": 27, "advanc": [27, 28, 29], "throughout": 27, "folder": 27, "box": 27, "text": 27, "tell": 27, "launch": 27, "python3": [27, 29], "There": 27, "One": 27, "easiest": 27, "formul": 27, "addit": [27, 29], "appropri": 27, "accordingli": 27, "notifi": 27, "upon": 27, "behav": 27, "slightli": 27, "reach": 27, "effect": 27, "whole": 27, "last": [27, 29], "lesson": 27, "taught": 27, "match": 27, "routin": 27, "awai": 27, "result_for_all_st": 27, "someth": 27, "good": 27, "04": 27, "quickli": 27, "higher": 27, "exploit": 27, "question": 27, "quick": 28, "tour": 28, "contributor": 28, "search": 28, "page": 28, "your": 29, "avoid": 29, "issu": 29, "suggest": 29, "simplest": 29, "modifi": 29, "releas": 29, "latest": 29, "stabl": 29, "branch": 29, "master": 29, "ongo": 29, "anymor": 29, "fix": 29, "homebrew": 29, "isol": 29, "project": 29, "keep": 29, "packag": 29, "recommend": 29, "primer": 29, "pip": 29, "virtualenv": 29, "bin": 29, "activ": 29, "whenev": 29, "consol": 29, "prompt": 29, "prefix": 29, "git": 29, "github": 29, "com": 29, "rwth": 29, "cd": 29, "rememb": 29, "mode": 29, "favourit": 29, "setup": 29, "ve": 29, "build_ext": 29, "configur": 29, "cmake": 29, "abl": 29, "dir": 29, "TO": 29, "disabl": 29, "certain": 29, "thread": 29, "manual": 29, "job": 29, "j": 29, "invok": 29, "pytest": 29, "consult": 29, "pandoc": 29, "automat": 29, "easy_instal": 29, "doc": 29, "sphinx": 29, "sphinx_bootstrap_them": 29, "nbsphinx": 29, "ipykernel": 29, "html": 29}, "objects": {"": [[2, 0, 0, "-", "stormpy"]], "stormpy": [[2, 1, 1, "", "ActionMaskDouble"], [2, 1, 1, "", "AtomicExpressionFormula"], [2, 1, 1, "", "AtomicLabelFormula"], [2, 1, 1, "", "Bdd_Sylvan"], [2, 1, 1, "", "BinaryBooleanOperatorType"], [2, 1, 1, "", "BinaryPathFormula"], [2, 1, 1, "", "BinaryStateFormula"], [2, 1, 1, "", "BisimulationType"], [2, 1, 1, "", "BitVector"], [2, 1, 1, "", "BooleanBinaryStateFormula"], [2, 1, 1, "", "BooleanLiteralFormula"], [2, 1, 1, "", "BoundedUntilFormula"], [2, 1, 1, "", "BuilderOptions"], [2, 1, 1, "", "CheckTask"], [2, 1, 1, "", "ChoiceLabeling"], [2, 1, 1, "", "ChoiceOrigins"], [2, 1, 1, "", "ComparisonType"], [2, 1, 1, "", "ConditionalFormula"], [2, 1, 1, "", "ConstraintCollector"], [2, 1, 1, "", "CumulativeRewardFormula"], [2, 1, 1, "", "DdManager_Sylvan"], [2, 1, 1, "", "DdMetaVariableType"], [2, 1, 1, "", "DdMetaVariable_Sylvan"], [2, 1, 1, "", "Dd_Sylvan"], [2, 1, 1, "", "DiceStringVisitor"], [2, 1, 1, "", "DirectEncodingOptions"], [2, 1, 1, "", "DirectEncodingParserOptions"], [2, 1, 1, "", "DistributionDouble"], [2, 1, 1, "", "EliminationLabelBehavior"], [2, 1, 1, "", "EndComponentEliminatorReturnTypeDouble"], [2, 1, 1, "", "Environment"], [2, 1, 1, "", "EquationSolverType"], [2, 1, 1, "", "EventuallyFormula"], [2, 1, 1, "", "ExactCheckTask"], [2, 1, 1, "", "ExactSparseMatrix"], [2, 1, 1, "", "ExactSparseMatrixBuilder"], [2, 1, 1, "", "ExactSparseMatrixEntry"], [2, 1, 1, "", "ExactSparseMatrixRows"], [2, 1, 1, "", "ExplicitExactQuantitativeCheckResult"], [2, 1, 1, "", "ExplicitModelBuilder"], [2, 1, 1, "", "ExplicitModelCheckerHintDouble"], [2, 1, 1, "", "ExplicitParametricModelBuilder"], [2, 1, 1, "", "ExplicitParametricQuantitativeCheckResult"], [2, 1, 1, "", "ExplicitParetoCurveCheckResultDouble"], [2, 1, 1, "", "ExplicitQualitativeCheckResult"], [2, 1, 1, "", "ExplicitQuantitativeCheckResult"], [2, 1, 1, "", "ExplicitStateLookup"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "ExpressionManager"], [2, 1, 1, "", "ExpressionParser"], [2, 1, 1, "", "ExpressionType"], [2, 1, 1, "", "FactorizedPolynomial"], [2, 1, 1, "", "FactorizedRationalFunction"], [2, 1, 1, "", "FlatSet"], [2, 1, 1, "", "Formula"], [2, 1, 1, "", "GloballyFormula"], [2, 1, 1, "", "HybridExactQuantitativeCheckResult"], [2, 1, 1, "", "HybridParametricQuantitativeCheckResult"], [2, 1, 1, "", "HybridQuantitativeCheckResult"], [2, 1, 1, "", "InstantaneousRewardFormula"], [2, 1, 1, "", "ItemLabeling"], [2, 1, 1, "", "JaniAssignment"], [2, 1, 1, "", "JaniAutomaton"], [2, 1, 1, "", "JaniChoiceOrigins"], [2, 1, 1, "", "JaniConstant"], [2, 1, 1, "", "JaniEdge"], [2, 1, 1, "", "JaniEdgeDestination"], [2, 1, 1, "", "JaniInformationObject"], [2, 1, 1, "", "JaniLocation"], [2, 1, 1, "", "JaniLocationExpander"], [2, 1, 1, "", "JaniModel"], [2, 1, 1, "", "JaniModelType"], [2, 1, 1, "", "JaniOrderedAssignments"], [2, 1, 1, "", "JaniScopeChanger"], [2, 1, 1, "", "JaniTemplateEdge"], [2, 1, 1, "", "JaniTemplateEdgeDestination"], [2, 1, 1, "", "JaniVariable"], [2, 1, 1, "", "JaniVariableSet"], [2, 1, 1, "", "LongRunAvarageOperator"], [2, 1, 1, "", "LongRunAverageRewardFormula"], [2, 1, 1, "", "MaximalEndComponent"], [2, 1, 1, "", "MaximalEndComponentDecomposition_double"], [2, 1, 1, "", "MaximalEndComponentDecomposition_exact"], [2, 1, 1, "", "MaximalEndComponentDecomposition_ratfunc"], [2, 1, 1, "", "MinMaxMethod"], [2, 1, 1, "", "MinMaxSolverEnvironment"], [2, 1, 1, "", "ModelCheckerHint"], [2, 1, 1, "", "ModelFormulasPair"], [2, 1, 1, "", "ModelType"], [2, 1, 1, "", "MultiObjectiveFormula"], [2, 1, 1, "", "NativeLinearEquationSolverMethod"], [2, 1, 1, "", "NativeSolverEnvironment"], [2, 1, 1, "", "OperatorFormula"], [2, 1, 1, "", "OperatorType"], [2, 1, 1, "", "OptimizationDirection"], [2, 1, 1, "", "OverlappingGuardAnalyser"], [2, 1, 1, "", "ParametricCheckTask"], [2, 1, 1, "", "ParametricSparseMatrix"], [2, 1, 1, "", "ParametricSparseMatrixBuilder"], [2, 1, 1, "", "ParametricSparseMatrixEntry"], [2, 1, 1, "", "ParametricSparseMatrixRows"], [2, 1, 1, "", "ParetoCurveCheckResultDouble"], [2, 1, 1, "", "PathFormula"], [2, 1, 1, "", "Polynomial"], [2, 1, 1, "", "PolytopeDouble"], [2, 1, 1, "", "PolytopeExact"], [2, 1, 1, "", "PrismAssignment"], [2, 1, 1, "", "PrismBooleanVariable"], [2, 1, 1, "", "PrismChoiceOrigins"], [2, 1, 1, "", "PrismCommand"], [2, 1, 1, "", "PrismConstant"], [2, 1, 1, "", "PrismIntegerVariable"], [2, 1, 1, "", "PrismLabel"], [2, 1, 1, "", "PrismModelType"], [2, 1, 1, "", "PrismModule"], [2, 1, 1, "", "PrismProgram"], [2, 1, 1, "", "PrismRewardModel"], [2, 1, 1, "", "PrismUpdate"], [2, 1, 1, "", "PrismVariable"], [2, 1, 1, "", "ProbabilityOperator"], [2, 1, 1, "", "Property"], [2, 1, 1, "", "QuotientFormat"], [2, 1, 1, "", "Rational"], [2, 1, 1, "", "RationalFunction"], [2, 4, 1, "", "RationalRF"], [2, 1, 1, "", "RewardOperator"], [2, 1, 1, "", "SMTCounterExampleGenerator"], [2, 1, 1, "", "SMTCounterExampleGeneratorOptions"], [2, 1, 1, "", "SMTCounterExampleGeneratorStats"], [2, 1, 1, "", "SMTCounterExampleInput"], [2, 1, 1, "", "SchedulerChoiceDouble"], [2, 1, 1, "", "SchedulerChoiceExact"], [2, 1, 1, "", "SchedulerDouble"], [2, 1, 1, "", "SchedulerExact"], [2, 1, 1, "", "SimpleValuation"], [2, 1, 1, "", "SolverEnvironment"], [2, 1, 1, "", "SparseCtmc"], [2, 1, 1, "", "SparseDtmc"], [2, 1, 1, "", "SparseExactCtmc"], [2, 1, 1, "", "SparseExactDtmc"], [2, 1, 1, "", "SparseExactMA"], [2, 1, 1, "", "SparseExactMdp"], [2, 1, 1, "", "SparseExactModelAction"], [2, 1, 1, "", "SparseExactModelActions"], [2, 1, 1, "", "SparseExactModelComponents"], [2, 1, 1, "", "SparseExactModelState"], [2, 1, 1, "", "SparseExactModelStates"], [2, 1, 1, "", "SparseExactPomdp"], [2, 1, 1, "", "SparseExactRewardModel"], [2, 1, 1, "", "SparseMA"], [2, 1, 1, "", "SparseMatrix"], [2, 1, 1, "", "SparseMatrixBuilder"], [2, 1, 1, "", "SparseMatrixEntry"], [2, 1, 1, "", "SparseMatrixRows"], [2, 1, 1, "", "SparseMdp"], [2, 1, 1, "", "SparseModelAction"], [2, 1, 1, "", "SparseModelActions"], [2, 1, 1, "", "SparseModelComponents"], [2, 1, 1, "", "SparseModelState"], [2, 1, 1, "", "SparseModelStates"], [2, 1, 1, "", "SparseParametricCtmc"], [2, 1, 1, "", "SparseParametricDtmc"], [2, 1, 1, "", "SparseParametricMA"], [2, 1, 1, "", "SparseParametricMdp"], [2, 1, 1, "", "SparseParametricModelAction"], [2, 1, 1, "", "SparseParametricModelActions"], [2, 1, 1, "", "SparseParametricModelState"], [2, 1, 1, "", "SparseParametricModelStates"], [2, 1, 1, "", "SparseParametricPomdp"], [2, 1, 1, "", "SparseParametricRewardModel"], [2, 1, 1, "", "SparsePomdp"], [2, 1, 1, "", "SparseRewardModel"], [2, 1, 1, "", "StateFormula"], [2, 1, 1, "", "StateLabeling"], [2, 1, 1, "", "StateValuation"], [2, 1, 1, "", "StateValuationFunctionActionMaskDouble"], [2, 1, 1, "", "StateValuationsBuilder"], [2, 5, 1, "", "StormError"], [2, 1, 1, "", "SubsystemBuilderOptions"], [2, 1, 1, "", "SubsystemBuilderReturnTypeDouble"], [2, 1, 1, "", "SubsystemBuilderReturnTypeExact"], [2, 1, 1, "", "SubsystemBuilderReturnTypeRatFunc"], [2, 1, 1, "", "SymbolicExactQuantitativeCheckResult"], [2, 1, 1, "", "SymbolicModelDescription"], [2, 1, 1, "", "SymbolicParametricQuantitativeCheckResult"], [2, 1, 1, "", "SymbolicQualitativeCheckResult"], [2, 1, 1, "", "SymbolicQuantitativeCheckResult"], [2, 1, 1, "", "SymbolicSylvanCtmc"], [2, 1, 1, "", "SymbolicSylvanDtmc"], [2, 1, 1, "", "SymbolicSylvanMA"], [2, 1, 1, "", "SymbolicSylvanMdp"], [2, 1, 1, "", "SymbolicSylvanParametricCtmc"], [2, 1, 1, "", "SymbolicSylvanParametricDtmc"], [2, 1, 1, "", "SymbolicSylvanParametricMA"], [2, 1, 1, "", "SymbolicSylvanParametricMdp"], [2, 1, 1, "", "SymbolicSylvanParametricRewardModel"], [2, 1, 1, "", "SymbolicSylvanRewardModel"], [2, 1, 1, "", "TimeOperator"], [2, 1, 1, "", "UnaryBooleanStateFormula"], [2, 1, 1, "", "UnaryPathFormula"], [2, 1, 1, "", "UnaryStateFormula"], [2, 1, 1, "", "UntilFormula"], [2, 1, 1, "", "Variable"], [2, 6, 1, "", "build_model"], [2, 6, 1, "", "build_model_from_drn"], [2, 6, 1, "", "build_parametric_model"], [2, 6, 1, "", "build_parametric_model_from_drn"], [2, 6, 1, "", "build_parametric_sparse_matrix"], [2, 6, 1, "", "build_sparse_exact_model_with_options"], [2, 6, 1, "", "build_sparse_matrix"], [2, 6, 1, "", "build_sparse_model"], [2, 6, 1, "", "build_sparse_model_from_explicit"], [2, 6, 1, "", "build_sparse_model_with_options"], [2, 6, 1, "", "build_sparse_parametric_model"], [2, 6, 1, "", "build_sparse_parametric_model_with_options"], [2, 6, 1, "", "build_symbolic_model"], [2, 6, 1, "", "build_symbolic_parametric_model"], [2, 6, 1, "", "check_model_dd"], [2, 6, 1, "", "check_model_hybrid"], [2, 6, 1, "", "check_model_sparse"], [2, 6, 1, "", "collect_information"], [2, 6, 1, "", "compute_all_until_probabilities"], [2, 6, 1, "", "compute_expected_number_of_visits"], [2, 6, 1, "", "compute_prob01_states"], [2, 6, 1, "", "compute_prob01max_states"], [2, 6, 1, "", "compute_prob01min_states"], [2, 6, 1, "", "compute_transient_probabilities"], [2, 6, 1, "", "construct_submodel"], [2, 6, 1, "", "create_filter_initial_states_sparse"], [2, 6, 1, "", "create_filter_initial_states_symbolic"], [2, 6, 1, "", "create_filter_symbolic"], [3, 0, 0, "-", "dft"], [2, 6, 1, "", "eliminate_ECs"], [2, 6, 1, "", "eliminate_non_markovian_chains"], [2, 6, 1, "", "eliminate_reward_accumulations"], [4, 0, 0, "-", "exceptions"], [2, 6, 1, "", "export_to_drn"], [2, 6, 1, "", "get_maximal_end_components"], [2, 6, 1, "", "get_reachable_states"], [5, 0, 0, "-", "gspn"], [6, 0, 0, "-", "info"], [2, 6, 1, "", "install_signal_handlers"], [7, 0, 0, "-", "logic"], [2, 6, 1, "", "make_sparse_model_builder"], [2, 6, 1, "", "make_sparse_model_builder_exact"], [2, 6, 1, "", "make_sparse_model_builder_parametric"], [2, 6, 1, "", "model_checking"], [8, 0, 0, "-", "pars"], [2, 6, 1, "", "parse_jani_model"], [2, 6, 1, "", "parse_jani_model_from_string"], [2, 6, 1, "", "parse_prism_program"], [2, 6, 1, "", "parse_properties"], [2, 6, 1, "", "parse_properties_for_jani_model"], [2, 6, 1, "", "parse_properties_for_prism_program"], [2, 6, 1, "", "parse_properties_without_context"], [2, 6, 1, "", "perform_bisimulation"], [2, 6, 1, "", "perform_sparse_bisimulation"], [2, 6, 1, "", "perform_symbolic_bisimulation"], [2, 6, 1, "", "preprocess_symbolic_input"], [2, 6, 1, "", "prob01max_states"], [2, 6, 1, "", "prob01min_states"], [2, 6, 1, "", "reset_timeout"], [2, 6, 1, "", "set_settings"], [2, 6, 1, "", "set_timeout"], [9, 0, 0, "-", "storage"], [2, 6, 1, "", "topological_sort"], [2, 6, 1, "", "transform_to_discrete_time_model"], [2, 6, 1, "", "transform_to_sparse_model"], [10, 0, 0, "-", "utility"]], "stormpy.AtomicExpressionFormula": [[2, 2, 1, "", "get_expression"]], "stormpy.AtomicLabelFormula": [[2, 3, 1, "", "label"]], "stormpy.Bdd_Sylvan": [[2, 2, 1, "", "to_expression"]], "stormpy.BinaryBooleanOperatorType": [[2, 4, 1, "", "AND"], [2, 4, 1, "", "OR"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.BinaryPathFormula": [[2, 3, 1, "", "left_subformula"], [2, 3, 1, "", "right_subformula"]], "stormpy.BisimulationType": [[2, 4, 1, "", "STRONG"], [2, 4, 1, "", "WEAK"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.BitVector": [[2, 2, 1, "", "get"], [2, 2, 1, "", "load_from_string"], [2, 2, 1, "", "number_of_set_bits"], [2, 2, 1, "", "set"], [2, 2, 1, "", "size"], [2, 2, 1, "", "store_as_string"]], "stormpy.BoundedUntilFormula": [[2, 3, 1, "", "has_lower_bound"], [2, 3, 1, "", "is_multidimensional"], [2, 3, 1, "", "left_subformula"], [2, 3, 1, "", "right_subformula"], [2, 3, 1, "", "upper_bound_expression"]], "stormpy.BuilderOptions": [[2, 3, 1, "", "preserved_label_names"], [2, 2, 1, "", "set_add_out_of_bounds_state"], [2, 2, 1, "", "set_add_overlapping_guards_label"], [2, 2, 1, "", "set_build_all_labels"], [2, 2, 1, "", "set_build_all_reward_models"], [2, 2, 1, "", "set_build_choice_labels"], [2, 2, 1, "", "set_build_observation_valuations"], [2, 2, 1, "", "set_build_state_valuations"], [2, 2, 1, "", "set_build_with_choice_origins"]], "stormpy.CheckTask": [[2, 2, 1, "", "set_hint"], [2, 2, 1, "", "set_produce_schedulers"]], "stormpy.ChoiceLabeling": [[2, 2, 1, "", "add_label_to_choice"], [2, 2, 1, "", "get_choices"], [2, 2, 1, "", "get_labels_of_choice"], [2, 2, 1, "", "set_choices"]], "stormpy.ChoiceOrigins": [[2, 2, 1, "", "as_jani_choice_origins"], [2, 2, 1, "", "as_prism_choice_origins"], [2, 2, 1, "", "get_choice_info"], [2, 2, 1, "", "get_identifier_info"], [2, 2, 1, "", "get_number_of_identifiers"], [2, 2, 1, "", "is_jani_choice_origins"], [2, 2, 1, "", "is_prism_choice_origins"]], "stormpy.ComparisonType": [[2, 4, 1, "", "GEQ"], [2, 4, 1, "", "GREATER"], [2, 4, 1, "", "LEQ"], [2, 4, 1, "", "LESS"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.ConstraintCollector": [[2, 3, 1, "", "graph_preserving_constraints"], [2, 3, 1, "", "wellformed_constraints"]], "stormpy.DdManager_Sylvan": [[2, 2, 1, "", "get_meta_variable"]], "stormpy.DdMetaVariableType": [[2, 4, 1, "", "Bitvector"], [2, 4, 1, "", "Bool"], [2, 4, 1, "", "Int"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.DdMetaVariable_Sylvan": [[2, 2, 1, "", "compute_indices"], [2, 3, 1, "", "lowest_value"], [2, 3, 1, "", "name"], [2, 3, 1, "", "type"]], "stormpy.Dd_Sylvan": [[2, 3, 1, "", "dd_manager"], [2, 3, 1, "", "meta_variables"], [2, 3, 1, "", "node_count"]], "stormpy.DiceStringVisitor": [[2, 2, 1, "", "to_string"]], "stormpy.DirectEncodingOptions": [[2, 3, 1, "", "allow_placeholders"]], "stormpy.DirectEncodingParserOptions": [[2, 3, 1, "", "build_choice_labels"]], "stormpy.EliminationLabelBehavior": [[2, 4, 1, "", "DELETE_LABELS"], [2, 4, 1, "", "KEEP_LABELS"], [2, 4, 1, "", "MERGE_LABELS"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.EndComponentEliminatorReturnTypeDouble": [[2, 3, 1, "", "matrix"], [2, 3, 1, "", "new_to_old_row_mapping"], [2, 3, 1, "", "old_to_new_state_mapping"], [2, 3, 1, "", "sink_rows"]], "stormpy.Environment": [[2, 3, 1, "", "solver_environment"]], "stormpy.EquationSolverType": [[2, 4, 1, "", "eigen"], [2, 4, 1, "", "elimination"], [2, 4, 1, "", "gmmxx"], [2, 3, 1, "", "name"], [2, 4, 1, "", "native"], [2, 4, 1, "", "topological"], [2, 3, 1, "", "value"]], "stormpy.ExactCheckTask": [[2, 2, 1, "", "set_produce_schedulers"]], "stormpy.ExactSparseMatrix": [[2, 2, 1, "", "get_row"], [2, 2, 1, "", "get_row_group_end"], [2, 2, 1, "", "get_row_group_start"], [2, 2, 1, "", "get_rows"], [2, 3, 1, "", "has_trivial_row_grouping"], [2, 3, 1, "", "nr_columns"], [2, 3, 1, "", "nr_entries"], [2, 3, 1, "", "nr_rows"], [2, 2, 1, "", "print_row"], [2, 2, 1, "", "row_iter"], [2, 2, 1, "", "submatrix"]], "stormpy.ExactSparseMatrixBuilder": [[2, 2, 1, "", "add_next_value"], [2, 2, 1, "", "build"], [2, 2, 1, "", "get_current_row_group_count"], [2, 2, 1, "", "get_last_column"], [2, 2, 1, "", "get_last_row"], [2, 2, 1, "", "new_row_group"], [2, 2, 1, "", "replace_columns"]], "stormpy.ExactSparseMatrixEntry": [[2, 3, 1, "", "column"], [2, 2, 1, "", "set_value"], [2, 2, 1, "", "value"]], "stormpy.ExplicitExactQuantitativeCheckResult": [[2, 2, 1, "", "at"], [2, 2, 1, "", "get_values"]], "stormpy.ExplicitModelBuilder": [[2, 2, 1, "", "build"], [2, 2, 1, "", "export_lookup"]], "stormpy.ExplicitModelCheckerHintDouble": [[2, 2, 1, "", "set_compute_only_maybe_states"], [2, 2, 1, "", "set_maybe_states"], [2, 2, 1, "", "set_result_hint"], [2, 2, 1, "", "set_scheduler_hint"]], "stormpy.ExplicitParametricModelBuilder": [[2, 2, 1, "", "build"], [2, 2, 1, "", "export_lookup"]], "stormpy.ExplicitParametricQuantitativeCheckResult": [[2, 2, 1, "", "at"], [2, 2, 1, "", "get_values"]], "stormpy.ExplicitQualitativeCheckResult": [[2, 2, 1, "", "at"], [2, 2, 1, "", "get_truth_values"]], "stormpy.ExplicitQuantitativeCheckResult": [[2, 2, 1, "", "at"], [2, 2, 1, "", "get_values"], [2, 3, 1, "", "scheduler"]], "stormpy.ExplicitStateLookup": [[2, 2, 1, "", "lookup"]], "stormpy.Expression": [[2, 2, 1, "", "And"], [2, 2, 1, "", "Conjunction"], [2, 2, 1, "", "Disjunction"], [2, 2, 1, "", "Divide"], [2, 2, 1, "", "Eq"], [2, 2, 1, "", "Geq"], [2, 2, 1, "", "Greater"], [2, 2, 1, "", "Iff"], [2, 2, 1, "", "Implies"], [2, 2, 1, "", "Leq"], [2, 2, 1, "", "Less"], [2, 2, 1, "", "Minus"], [2, 2, 1, "", "Modulo"], [2, 2, 1, "", "Multiply"], [2, 2, 1, "", "Neq"], [2, 2, 1, "", "Or"], [2, 2, 1, "", "Plus"], [2, 3, 1, "", "arity"], [2, 2, 1, "", "contains_variable"], [2, 2, 1, "", "contains_variables"], [2, 2, 1, "", "evaluate_as_bool"], [2, 2, 1, "", "evaluate_as_double"], [2, 2, 1, "", "evaluate_as_int"], [2, 2, 1, "", "evaluate_as_rational"], [2, 2, 1, "", "get_operand"], [2, 2, 1, "", "get_variables"], [2, 2, 1, "", "has_boolean_type"], [2, 2, 1, "", "has_integer_type"], [2, 2, 1, "", "has_rational_type"], [2, 2, 1, "", "identifier"], [2, 3, 1, "", "is_function_application"], [2, 2, 1, "", "is_literal"], [2, 2, 1, "", "is_variable"], [2, 3, 1, "", "manager"], [2, 3, 1, "", "operator"], [2, 2, 1, "", "simplify"], [2, 2, 1, "", "substitute"], [2, 3, 1, "", "type"]], "stormpy.ExpressionManager": [[2, 2, 1, "", "create_boolean"], [2, 2, 1, "", "create_boolean_variable"], [2, 2, 1, "", "create_integer"], [2, 2, 1, "", "create_integer_variable"], [2, 2, 1, "", "create_rational"], [2, 2, 1, "", "create_rational_variable"], [2, 2, 1, "", "get_variable"], [2, 2, 1, "", "get_variables"]], "stormpy.ExpressionParser": [[2, 2, 1, "", "parse"], [2, 2, 1, "", "set_identifier_mapping"]], "stormpy.ExpressionType": [[2, 3, 1, "", "is_boolean"], [2, 3, 1, "", "is_integer"], [2, 3, 1, "", "is_rational"]], "stormpy.FactorizedPolynomial": [[2, 2, 1, "", "cache"], [2, 3, 1, "", "coefficient"], [2, 2, 1, "", "constant_part"], [2, 2, 1, "", "derive"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "factorization"], [2, 2, 1, "", "gather_variables"], [2, 2, 1, "", "is_constant"], [2, 2, 1, "", "is_one"], [2, 2, 1, "", "polynomial"], [2, 2, 1, "", "to_smt2"]], "stormpy.FactorizedRationalFunction": [[2, 2, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 2, 1, "", "derive"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "gather_variables"], [2, 2, 1, "", "is_constant"], [2, 3, 1, "", "numerator"], [2, 2, 1, "", "rational_function"], [2, 2, 1, "", "to_smt2"]], "stormpy.FlatSet": [[2, 2, 1, "", "insert"], [2, 2, 1, "", "insert_set"], [2, 2, 1, "", "is_subset_of"]], "stormpy.Formula": [[2, 2, 1, "", "clone"], [2, 3, 1, "", "is_bounded_until_formula"], [2, 3, 1, "", "is_eventually_formula"], [2, 3, 1, "", "is_multi_objective_formula"], [2, 3, 1, "", "is_probability_operator"], [2, 3, 1, "", "is_reward_operator"], [2, 3, 1, "", "is_until_formula"], [2, 2, 1, "", "substitute"], [2, 2, 1, "", "substitute_labels_by_labels"]], "stormpy.HybridExactQuantitativeCheckResult": [[2, 2, 1, "", "get_values"]], "stormpy.HybridParametricQuantitativeCheckResult": [[2, 2, 1, "", "get_values"]], "stormpy.HybridQuantitativeCheckResult": [[2, 2, 1, "", "get_values"]], "stormpy.ItemLabeling": [[2, 2, 1, "", "add_label"], [2, 2, 1, "", "contains_label"], [2, 2, 1, "", "get_labels"]], "stormpy.JaniAssignment": [[2, 3, 1, "", "expression"], [2, 3, 1, "", "variable"]], "stormpy.JaniAutomaton": [[2, 2, 1, "", "add_edge"], [2, 2, 1, "", "add_initial_location"], [2, 2, 1, "", "add_location"], [2, 3, 1, "", "edges"], [2, 2, 1, "", "get_location_index"], [2, 3, 1, "", "initial_location_indices"], [2, 3, 1, "", "initial_states_restriction"], [2, 3, 1, "", "location_variable"], [2, 3, 1, "", "locations"], [2, 3, 1, "", "name"], [2, 3, 1, "", "variables"]], "stormpy.JaniChoiceOrigins": [[2, 2, 1, "", "get_edge_index_set"], [2, 3, 1, "", "model"]], "stormpy.JaniConstant": [[2, 3, 1, "", "defined"], [2, 3, 1, "", "expression_variable"], [2, 3, 1, "", "name"], [2, 3, 1, "", "type"]], "stormpy.JaniEdge": [[2, 3, 1, "", "action_index"], [2, 3, 1, "", "color"], [2, 3, 1, "", "destinations"], [2, 3, 1, "", "guard"], [2, 2, 1, "", "has_silent_action"], [2, 3, 1, "", "nr_destinations"], [2, 3, 1, "", "rate"], [2, 3, 1, "", "source_location_index"], [2, 2, 1, "", "substitute"], [2, 3, 1, "", "template_edge"]], "stormpy.JaniEdgeDestination": [[2, 3, 1, "", "assignments"], [2, 3, 1, "", "probability"], [2, 3, 1, "", "target_location_index"]], "stormpy.JaniInformationObject": [[2, 3, 1, "", "avg_var_domain_size"], [2, 3, 1, "", "model_type"], [2, 3, 1, "", "nr_automata"], [2, 3, 1, "", "nr_edges"], [2, 3, 1, "", "nr_variables"], [2, 3, 1, "", "state_domain_size"]], "stormpy.JaniLocation": [[2, 3, 1, "", "assignments"], [2, 3, 1, "", "name"]], "stormpy.JaniLocationExpander": [[2, 2, 1, "", "transform"]], "stormpy.JaniModel": [[2, 2, 1, "", "add_automaton"], [2, 2, 1, "", "add_constant"], [2, 3, 1, "", "automata"], [2, 2, 1, "", "check_valid"], [2, 3, 1, "", "constants"], [2, 2, 1, "", "decode_automaton_and_edge_index"], [2, 2, 1, "", "define_constants"], [2, 2, 1, "", "encode_automaton_and_edge_index"], [2, 3, 1, "", "expression_manager"], [2, 2, 1, "", "finalize"], [2, 2, 1, "", "flatten_composition"], [2, 2, 1, "", "get_automaton"], [2, 2, 1, "", "get_automaton_index"], [2, 2, 1, "", "get_constant"], [2, 3, 1, "", "global_variables"], [2, 2, 1, "", "has_standard_composition"], [2, 3, 1, "", "has_undefined_constants"], [2, 3, 1, "", "initial_states_restriction"], [2, 2, 1, "", "make_standard_compliant"], [2, 3, 1, "", "model_type"], [2, 3, 1, "", "name"], [2, 2, 1, "", "remove_constant"], [2, 2, 1, "", "replace_automaton"], [2, 2, 1, "", "restrict_edges"], [2, 2, 1, "", "set_model_type"], [2, 2, 1, "", "set_standard_system_composition"], [2, 2, 1, "", "substitute_constants"], [2, 2, 1, "", "substitute_functions"], [2, 2, 1, "", "to_dot"], [2, 3, 1, "", "undefined_constants_are_graph_preserving"]], "stormpy.JaniModelType": [[2, 4, 1, "", "CTMC"], [2, 4, 1, "", "CTMDP"], [2, 4, 1, "", "DTMC"], [2, 4, 1, "", "HA"], [2, 4, 1, "", "LTS"], [2, 4, 1, "", "MA"], [2, 4, 1, "", "MDP"], [2, 4, 1, "", "PHA"], [2, 4, 1, "", "PTA"], [2, 4, 1, "", "SHA"], [2, 4, 1, "", "STA"], [2, 4, 1, "", "TA"], [2, 4, 1, "", "UNDEFINED"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.JaniOrderedAssignments": [[2, 2, 1, "", "add"], [2, 2, 1, "", "clone"], [2, 2, 1, "", "substitute"]], "stormpy.JaniScopeChanger": [[2, 2, 1, "", "make_variables_local"]], "stormpy.JaniTemplateEdge": [[2, 2, 1, "", "add_destination"], [2, 3, 1, "", "assignments"], [2, 3, 1, "", "destinations"], [2, 3, 1, "", "guard"]], "stormpy.JaniTemplateEdgeDestination": [[2, 3, 1, "", "assignments"]], "stormpy.JaniVariable": [[2, 3, 1, "", "expression_variable"], [2, 3, 1, "", "init_expression"], [2, 3, 1, "", "name"]], "stormpy.JaniVariableSet": [[2, 2, 1, "", "add_variable"], [2, 2, 1, "", "empty"], [2, 2, 1, "", "erase_variable"], [2, 2, 1, "", "get_variable_by_expr_variable"], [2, 2, 1, "", "get_variable_by_name"]], "stormpy.MaximalEndComponent": [[2, 3, 1, "", "size"]], "stormpy.MaximalEndComponentDecomposition_double": [[2, 3, 1, "", "size"]], "stormpy.MaximalEndComponentDecomposition_exact": [[2, 3, 1, "", "size"]], "stormpy.MaximalEndComponentDecomposition_ratfunc": [[2, 3, 1, "", "size"]], "stormpy.MinMaxMethod": [[2, 4, 1, "", "interval_iteration"], [2, 4, 1, "", "linear_programming"], [2, 3, 1, "", "name"], [2, 4, 1, "", "optimistic_value_iteration"], [2, 4, 1, "", "policy_iteration"], [2, 4, 1, "", "rational_search"], [2, 4, 1, "", "sound_value_iteration"], [2, 4, 1, "", "topological"], [2, 4, 1, "", "topological_cuda"], [2, 3, 1, "", "value"], [2, 4, 1, "", "value_iteration"]], "stormpy.MinMaxSolverEnvironment": [[2, 3, 1, "", "method"], [2, 3, 1, "", "precision"]], "stormpy.ModelFormulasPair": [[2, 3, 1, "", "formulas"], [2, 3, 1, "", "model"]], "stormpy.ModelType": [[2, 4, 1, "", "CTMC"], [2, 4, 1, "", "DTMC"], [2, 4, 1, "", "MA"], [2, 4, 1, "", "MDP"], [2, 4, 1, "", "POMDP"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.MultiObjectiveFormula": [[2, 3, 1, "", "nr_subformulas"], [2, 3, 1, "", "subformulas"]], "stormpy.NativeLinearEquationSolverMethod": [[2, 4, 1, "", "SOR"], [2, 4, 1, "", "gauss_seidel"], [2, 4, 1, "", "interval_iteration"], [2, 4, 1, "", "jacobi"], [2, 3, 1, "", "name"], [2, 4, 1, "", "optimistic_value_iteration"], [2, 4, 1, "", "power_iteration"], [2, 4, 1, "", "rational_search"], [2, 4, 1, "", "sound_value_iteration"], [2, 3, 1, "", "value"], [2, 4, 1, "", "walker_chae"]], "stormpy.NativeSolverEnvironment": [[2, 3, 1, "", "maximum_iterations"], [2, 3, 1, "", "method"], [2, 3, 1, "", "precision"]], "stormpy.OperatorFormula": [[2, 3, 1, "", "comparison_type"], [2, 3, 1, "", "has_bound"], [2, 3, 1, "", "has_optimality_type"], [2, 3, 1, "", "optimality_type"], [2, 2, 1, "", "remove_bound"], [2, 2, 1, "", "remove_optimality_type"], [2, 2, 1, "", "set_bound"], [2, 2, 1, "", "set_optimality_type"], [2, 3, 1, "", "threshold"], [2, 3, 1, "", "threshold_expr"]], "stormpy.OperatorType": [[2, 4, 1, "", "And"], [2, 4, 1, "", "Ceil"], [2, 4, 1, "", "Divide"], [2, 4, 1, "", "Equal"], [2, 4, 1, "", "Floor"], [2, 4, 1, "", "Greater"], [2, 4, 1, "", "GreaterOrEqual"], [2, 4, 1, "", "Iff"], [2, 4, 1, "", "Implies"], [2, 4, 1, "", "Ite"], [2, 4, 1, "", "Less"], [2, 4, 1, "", "LessOrEqual"], [2, 4, 1, "", "Max"], [2, 4, 1, "", "Min"], [2, 4, 1, "", "Minus"], [2, 4, 1, "", "Modulo"], [2, 4, 1, "", "Not"], [2, 4, 1, "", "NotEqual"], [2, 4, 1, "", "Or"], [2, 4, 1, "", "Plus"], [2, 4, 1, "", "Power"], [2, 4, 1, "", "Times"], [2, 4, 1, "", "Xor"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.OptimizationDirection": [[2, 4, 1, "", "Maximize"], [2, 4, 1, "", "Minimize"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.OverlappingGuardAnalyser": [[2, 2, 1, "", "has_module_with_inner_action_overlapping_guard"]], "stormpy.ParametricCheckTask": [[2, 2, 1, "", "set_produce_schedulers"]], "stormpy.ParametricSparseMatrix": [[2, 2, 1, "", "get_row"], [2, 2, 1, "", "get_row_group_end"], [2, 2, 1, "", "get_row_group_start"], [2, 2, 1, "", "get_rows"], [2, 3, 1, "", "has_trivial_row_grouping"], [2, 3, 1, "", "nr_columns"], [2, 3, 1, "", "nr_entries"], [2, 3, 1, "", "nr_rows"], [2, 2, 1, "", "print_row"], [2, 2, 1, "", "row_iter"], [2, 2, 1, "", "submatrix"]], "stormpy.ParametricSparseMatrixBuilder": [[2, 2, 1, "", "add_next_value"], [2, 2, 1, "", "build"], [2, 2, 1, "", "get_current_row_group_count"], [2, 2, 1, "", "get_last_column"], [2, 2, 1, "", "get_last_row"], [2, 2, 1, "", "new_row_group"], [2, 2, 1, "", "replace_columns"]], "stormpy.ParametricSparseMatrixEntry": [[2, 3, 1, "", "column"], [2, 2, 1, "", "set_value"], [2, 2, 1, "", "value"]], "stormpy.ParetoCurveCheckResultDouble": [[2, 2, 1, "", "get_overapproximation"], [2, 2, 1, "", "get_underapproximation"]], "stormpy.Polynomial": [[2, 2, 1, "", "constant_part"], [2, 2, 1, "", "degree"], [2, 2, 1, "", "derive"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "gather_variables"], [2, 2, 1, "", "is_constant"], [2, 3, 1, "", "nr_terms"], [2, 2, 1, "", "substitute"], [2, 2, 1, "", "to_smt2"], [2, 3, 1, "", "total_degree"]], "stormpy.PolytopeDouble": [[2, 2, 1, "", "create_downward_closure"], [2, 2, 1, "", "get_vertices_clockwise"], [2, 3, 1, "", "vertices"]], "stormpy.PolytopeExact": [[2, 2, 1, "", "create_downward_closure"], [2, 2, 1, "", "get_vertices_clockwise"], [2, 3, 1, "", "vertices"]], "stormpy.PrismAssignment": [[2, 3, 1, "", "expression"], [2, 3, 1, "", "variable"]], "stormpy.PrismChoiceOrigins": [[2, 2, 1, "", "get_command_set"], [2, 3, 1, "", "program"]], "stormpy.PrismCommand": [[2, 3, 1, "", "action_index"], [2, 3, 1, "", "action_name"], [2, 3, 1, "", "global_index"], [2, 3, 1, "", "guard_expression"], [2, 3, 1, "", "is_labeled"], [2, 3, 1, "", "labeled"], [2, 3, 1, "", "updates"]], "stormpy.PrismConstant": [[2, 3, 1, "", "defined"], [2, 3, 1, "", "definition"], [2, 3, 1, "", "expression_variable"], [2, 3, 1, "", "name"], [2, 3, 1, "", "type"]], "stormpy.PrismIntegerVariable": [[2, 3, 1, "", "lower_bound_expression"], [2, 3, 1, "", "upper_bound_expression"]], "stormpy.PrismLabel": [[2, 3, 1, "", "expression"], [2, 3, 1, "", "name"]], "stormpy.PrismModelType": [[2, 4, 1, "", "CTMC"], [2, 4, 1, "", "CTMDP"], [2, 4, 1, "", "DTMC"], [2, 4, 1, "", "MA"], [2, 4, 1, "", "MDP"], [2, 4, 1, "", "POMDP"], [2, 4, 1, "", "UNDEFINED"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.PrismModule": [[2, 3, 1, "", "boolean_variables"], [2, 3, 1, "", "commands"], [2, 2, 1, "", "get_boolean_variable"], [2, 2, 1, "", "get_command_indices_by_action_index"], [2, 2, 1, "", "get_integer_variable"], [2, 3, 1, "", "integer_variables"], [2, 3, 1, "", "name"]], "stormpy.PrismProgram": [[2, 3, 1, "", "constants"], [2, 2, 1, "", "define_constants"], [2, 3, 1, "", "expression_manager"], [2, 2, 1, "", "flatten"], [2, 2, 1, "", "get_action_name"], [2, 2, 1, "", "get_constant"], [2, 2, 1, "", "get_label_expression"], [2, 2, 1, "", "get_module"], [2, 2, 1, "", "get_module_indices_by_action_index"], [2, 2, 1, "", "get_synchronizing_action_indices"], [2, 3, 1, "", "global_boolean_variables"], [2, 3, 1, "", "global_integer_variables"], [2, 3, 1, "", "hasUndefinedConstants"], [2, 2, 1, "", "has_constant"], [2, 2, 1, "", "has_label"], [2, 3, 1, "", "has_undefined_constants"], [2, 3, 1, "", "is_deterministic_model"], [2, 2, 1, "", "label_unlabelled_commands"], [2, 3, 1, "", "labels"], [2, 3, 1, "", "model_type"], [2, 3, 1, "", "modules"], [2, 3, 1, "", "nr_modules"], [2, 3, 1, "", "number_of_unlabeled_commands"], [2, 2, 1, "", "restrict_commands"], [2, 3, 1, "", "reward_models"], [2, 2, 1, "", "simplify"], [2, 2, 1, "", "substitute_constants"], [2, 2, 1, "", "substitute_formulas"], [2, 2, 1, "", "substitute_nonstandard_predicates"], [2, 2, 1, "", "to_jani"], [2, 3, 1, "", "undefined_constants_are_graph_preserving"], [2, 2, 1, "", "used_constants"], [2, 3, 1, "", "variables"]], "stormpy.PrismRewardModel": [[2, 3, 1, "", "name"]], "stormpy.PrismUpdate": [[2, 3, 1, "", "assignments"], [2, 2, 1, "", "get_as_variable_to_expression_map"], [2, 2, 1, "", "get_assignment"], [2, 3, 1, "", "global_index"], [2, 3, 1, "", "probability_expression"], [2, 2, 1, "", "simplify"], [2, 2, 1, "", "substitute"]], "stormpy.PrismVariable": [[2, 3, 1, "", "expression_variable"], [2, 3, 1, "", "initial_value_expression"], [2, 3, 1, "", "name"]], "stormpy.Property": [[2, 3, 1, "", "name"], [2, 3, 1, "", "raw_formula"]], "stormpy.QuotientFormat": [[2, 4, 1, "", "DD"], [2, 4, 1, "", "SPARSE"], [2, 3, 1, "", "name"], [2, 3, 1, "", "value"]], "stormpy.Rational": [[2, 3, 1, "", "denominator"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"]], "stormpy.RationalFunction": [[2, 2, 1, "", "constant_part"], [2, 3, 1, "", "denominator"], [2, 2, 1, "", "derive"], [2, 2, 1, "", "evaluate"], [2, 2, 1, "", "gather_variables"], [2, 2, 1, "", "is_constant"], [2, 3, 1, "", "nominator"], [2, 3, 1, "", "numerator"], [2, 2, 1, "", "to_smt2"]], "stormpy.RewardOperator": [[2, 2, 1, "", "has_reward_name"], [2, 3, 1, "", "reward_name"]], "stormpy.SMTCounterExampleGenerator": [[2, 2, 1, "", "build"], [2, 2, 1, "", "precompute"]], "stormpy.SMTCounterExampleGeneratorOptions": [[2, 3, 1, "", "add_backward_implication_cuts"], [2, 3, 1, "", "check_threshold_feasible"], [2, 3, 1, "", "continue_after_first_counterexample"], [2, 3, 1, "", "encode_reachability"], [2, 3, 1, "", "maximum_counterexamples"], [2, 3, 1, "", "maximum_iterations_after_counterexample"], [2, 3, 1, "", "silent"], [2, 3, 1, "", "use_dynamic_constraints"]], "stormpy.SMTCounterExampleGeneratorStats": [[2, 3, 1, "", "analysis_time"], [2, 3, 1, "", "cut_time"], [2, 3, 1, "", "iterations"], [2, 3, 1, "", "model_checking_time"], [2, 3, 1, "", "setup_time"], [2, 3, 1, "", "solver_time"]], "stormpy.SMTCounterExampleInput": [[2, 2, 1, "", "add_reward_and_threshold"]], "stormpy.SchedulerChoiceDouble": [[2, 3, 1, "", "defined"], [2, 3, 1, "", "deterministic"], [2, 2, 1, "", "get_choice"], [2, 2, 1, "", "get_deterministic_choice"]], "stormpy.SchedulerChoiceExact": [[2, 3, 1, "", "defined"], [2, 3, 1, "", "deterministic"], [2, 2, 1, "", "get_choice"], [2, 2, 1, "", "get_deterministic_choice"]], "stormpy.SchedulerDouble": [[2, 2, 1, "", "compute_action_support"], [2, 3, 1, "", "deterministic"], [2, 2, 1, "", "get_choice"], [2, 3, 1, "", "memory_size"], [2, 3, 1, "", "memoryless"], [2, 3, 1, "", "partial"]], "stormpy.SchedulerExact": [[2, 2, 1, "", "compute_action_support"], [2, 3, 1, "", "deterministic"], [2, 2, 1, "", "get_choice"], [2, 3, 1, "", "memory_size"], [2, 3, 1, "", "memoryless"], [2, 3, 1, "", "partial"]], "stormpy.SimpleValuation": [[2, 2, 1, "", "get_boolean_value"], [2, 2, 1, "", "get_integer_value"], [2, 2, 1, "", "to_json"]], "stormpy.SolverEnvironment": [[2, 3, 1, "", "minmax_solver_environment"], [2, 3, 1, "", "native_solver_environment"], [2, 2, 1, "", "set_force_sound"], [2, 2, 1, "", "set_linear_equation_solver_type"]], "stormpy.SparseCtmc": [[2, 3, 1, "", "exit_rates"]], "stormpy.SparseExactCtmc": [[2, 3, 1, "", "exit_rates"]], "stormpy.SparseExactMA": [[2, 2, 1, "", "apply_scheduler"], [2, 2, 1, "", "convert_to_ctmc"], [2, 3, 1, "", "convertible_to_ctmc"], [2, 3, 1, "", "exit_rates"], [2, 3, 1, "", "markovian_states"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseExactMdp": [[2, 2, 1, "", "apply_scheduler"], [2, 2, 1, "", "get_choice_index"], [2, 2, 1, "", "get_nr_available_actions"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseExactModelAction": [[2, 3, 1, "", "id"], [2, 3, 1, "", "transitions"]], "stormpy.SparseExactModelComponents": [[2, 3, 1, "", "choice_labeling"], [2, 3, 1, "", "choice_origins"], [2, 3, 1, "", "exit_rates"], [2, 3, 1, "", "markovian_states"], [2, 3, 1, "", "observability_classes"], [2, 3, 1, "", "player1_matrix"], [2, 3, 1, "", "rate_transitions"], [2, 3, 1, "", "reward_models"], [2, 3, 1, "", "state_labeling"], [2, 3, 1, "", "state_valuations"], [2, 3, 1, "", "transition_matrix"]], "stormpy.SparseExactModelState": [[2, 3, 1, "", "actions"], [2, 3, 1, "", "id"], [2, 3, 1, "", "labels"]], "stormpy.SparseExactPomdp": [[2, 2, 1, "", "get_observation"], [2, 2, 1, "", "has_observation_valuations"], [2, 3, 1, "", "nr_observations"], [2, 3, 1, "", "observation_valuations"], [2, 3, 1, "", "observations"]], "stormpy.SparseExactRewardModel": [[2, 2, 1, "", "get_state_action_reward"], [2, 2, 1, "", "get_state_reward"], [2, 2, 1, "", "get_zero_reward_states"], [2, 3, 1, "", "has_state_action_rewards"], [2, 3, 1, "", "has_state_rewards"], [2, 3, 1, "", "has_transition_rewards"], [2, 2, 1, "", "reduce_to_state_based_rewards"], [2, 2, 1, "", "set_state_reward"], [2, 3, 1, "", "state_action_rewards"], [2, 3, 1, "", "state_rewards"], [2, 3, 1, "", "transition_rewards"]], "stormpy.SparseMA": [[2, 2, 1, "", "apply_scheduler"], [2, 2, 1, "", "convert_to_ctmc"], [2, 3, 1, "", "convertible_to_ctmc"], [2, 3, 1, "", "exit_rates"], [2, 3, 1, "", "markovian_states"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseMatrix": [[2, 2, 1, "", "get_row"], [2, 2, 1, "", "get_row_group_end"], [2, 2, 1, "", "get_row_group_start"], [2, 2, 1, "", "get_rows"], [2, 3, 1, "", "has_trivial_row_grouping"], [2, 3, 1, "", "nr_columns"], [2, 3, 1, "", "nr_entries"], [2, 3, 1, "", "nr_rows"], [2, 2, 1, "", "print_row"], [2, 2, 1, "", "row_iter"], [2, 2, 1, "", "submatrix"]], "stormpy.SparseMatrixBuilder": [[2, 2, 1, "", "add_next_value"], [2, 2, 1, "", "build"], [2, 2, 1, "", "get_current_row_group_count"], [2, 2, 1, "", "get_last_column"], [2, 2, 1, "", "get_last_row"], [2, 2, 1, "", "new_row_group"], [2, 2, 1, "", "replace_columns"]], "stormpy.SparseMatrixEntry": [[2, 3, 1, "", "column"], [2, 2, 1, "", "set_value"], [2, 2, 1, "", "value"]], "stormpy.SparseMdp": [[2, 2, 1, "", "apply_scheduler"], [2, 2, 1, "", "get_choice_index"], [2, 2, 1, "", "get_nr_available_actions"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseModelAction": [[2, 3, 1, "", "id"], [2, 3, 1, "", "transitions"]], "stormpy.SparseModelComponents": [[2, 3, 1, "", "choice_labeling"], [2, 3, 1, "", "choice_origins"], [2, 3, 1, "", "exit_rates"], [2, 3, 1, "", "markovian_states"], [2, 3, 1, "", "observability_classes"], [2, 3, 1, "", "player1_matrix"], [2, 3, 1, "", "rate_transitions"], [2, 3, 1, "", "reward_models"], [2, 3, 1, "", "state_labeling"], [2, 3, 1, "", "state_valuations"], [2, 3, 1, "", "transition_matrix"]], "stormpy.SparseModelState": [[2, 3, 1, "", "actions"], [2, 3, 1, "", "id"], [2, 3, 1, "", "labels"]], "stormpy.SparseParametricMA": [[2, 2, 1, "", "apply_scheduler"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseParametricMdp": [[2, 2, 1, "", "apply_scheduler"], [2, 2, 1, "", "get_nr_available_actions"], [2, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.SparseParametricModelAction": [[2, 3, 1, "", "id"], [2, 3, 1, "", "transitions"]], "stormpy.SparseParametricModelState": [[2, 3, 1, "", "actions"], [2, 3, 1, "", "id"], [2, 3, 1, "", "labels"]], "stormpy.SparseParametricPomdp": [[2, 2, 1, "", "get_observation"], [2, 3, 1, "", "nr_observations"], [2, 3, 1, "", "observations"]], "stormpy.SparseParametricRewardModel": [[2, 2, 1, "", "get_state_action_reward"], [2, 2, 1, "", "get_state_reward"], [2, 3, 1, "", "has_state_action_rewards"], [2, 3, 1, "", "has_state_rewards"], [2, 3, 1, "", "has_transition_rewards"], [2, 2, 1, "", "reduce_to_state_based_rewards"], [2, 3, 1, "", "state_action_rewards"], [2, 3, 1, "", "state_rewards"], [2, 3, 1, "", "transition_rewards"]], "stormpy.SparsePomdp": [[2, 2, 1, "", "get_observation"], [2, 2, 1, "", "has_observation_valuations"], [2, 3, 1, "", "nr_observations"], [2, 3, 1, "", "observation_valuations"], [2, 3, 1, "", "observations"]], "stormpy.SparseRewardModel": [[2, 2, 1, "", "get_state_action_reward"], [2, 2, 1, "", "get_state_reward"], [2, 2, 1, "", "get_zero_reward_states"], [2, 3, 1, "", "has_state_action_rewards"], [2, 3, 1, "", "has_state_rewards"], [2, 3, 1, "", "has_transition_rewards"], [2, 2, 1, "", "reduce_to_state_based_rewards"], [2, 2, 1, "", "set_state_reward"], [2, 3, 1, "", "state_action_rewards"], [2, 3, 1, "", "state_rewards"], [2, 3, 1, "", "transition_rewards"]], "stormpy.StateLabeling": [[2, 2, 1, "", "add_label_to_state"], [2, 2, 1, "", "get_labels_of_state"], [2, 2, 1, "", "get_states"], [2, 2, 1, "", "has_state_label"], [2, 2, 1, "", "set_states"]], "stormpy.StateValuation": [[2, 2, 1, "", "get_boolean_value"], [2, 2, 1, "", "get_integer_value"], [2, 2, 1, "", "get_json"], [2, 2, 1, "", "get_nr_of_states"], [2, 2, 1, "", "get_rational_value"], [2, 2, 1, "", "get_string"]], "stormpy.StateValuationsBuilder": [[2, 2, 1, "", "add_state"], [2, 2, 1, "", "add_variable"], [2, 2, 1, "", "build"]], "stormpy.SubsystemBuilderOptions": [[2, 3, 1, "", "build_action_mapping"], [2, 3, 1, "", "build_kept_actions"], [2, 3, 1, "", "build_state_mapping"], [2, 3, 1, "", "check_transitions_outside"], [2, 3, 1, "", "fix_deadlocks"]], "stormpy.SubsystemBuilderReturnTypeDouble": [[2, 3, 1, "", "deadlock_label"], [2, 3, 1, "", "kept_actions"], [2, 3, 1, "", "model"], [2, 3, 1, "", "new_to_old_action_mapping"], [2, 3, 1, "", "new_to_old_state_mapping"]], "stormpy.SubsystemBuilderReturnTypeExact": [[2, 3, 1, "", "deadlock_label"], [2, 3, 1, "", "kept_actions"], [2, 3, 1, "", "model"], [2, 3, 1, "", "new_to_old_action_mapping"], [2, 3, 1, "", "new_to_old_state_mapping"]], "stormpy.SubsystemBuilderReturnTypeRatFunc": [[2, 3, 1, "", "deadlock_label"], [2, 3, 1, "", "kept_actions"], [2, 3, 1, "", "model"], [2, 3, 1, "", "new_to_old_action_mapping"], [2, 3, 1, "", "new_to_old_state_mapping"]], "stormpy.SymbolicExactQuantitativeCheckResult": [[2, 2, 1, "", "clone"]], "stormpy.SymbolicModelDescription": [[2, 2, 1, "", "as_jani_model"], [2, 2, 1, "", "as_prism_program"], [2, 2, 1, "", "instantiate_constants"], [2, 3, 1, "", "is_jani_model"], [2, 3, 1, "", "is_prism_program"], [2, 2, 1, "", "parse_constant_definitions"]], "stormpy.SymbolicParametricQuantitativeCheckResult": [[2, 2, 1, "", "clone"]], "stormpy.SymbolicQualitativeCheckResult": [[2, 2, 1, "", "get_truth_values"]], "stormpy.SymbolicQuantitativeCheckResult": [[2, 2, 1, "", "clone"]], "stormpy.SymbolicSylvanParametricRewardModel": [[2, 3, 1, "", "has_state_action_rewards"], [2, 3, 1, "", "has_state_rewards"], [2, 3, 1, "", "has_transition_rewards"]], "stormpy.SymbolicSylvanRewardModel": [[2, 3, 1, "", "has_state_action_rewards"], [2, 3, 1, "", "has_state_rewards"], [2, 3, 1, "", "has_transition_rewards"]], "stormpy.UnaryPathFormula": [[2, 3, 1, "", "subformula"]], "stormpy.UnaryStateFormula": [[2, 3, 1, "", "subformula"]], "stormpy.Variable": [[2, 3, 1, "", "id"], [2, 3, 1, "", "is_no_variable"], [2, 3, 1, "", "name"], [2, 3, 1, "", "rank"], [2, 3, 1, "", "type"]], "stormpy.dft": [[3, 1, 1, "", "ApproximationHeuristic"], [3, 1, 1, "", "DFTBE_double"], [3, 1, 1, "", "DFTBE_ratfunc"], [3, 1, 1, "", "DFTDependency_double"], [3, 1, 1, "", "DFTDependency_ratfunc"], [3, 1, 1, "", "DFTElementType"], [3, 1, 1, "", "DFTElement_double"], [3, 1, 1, "", "DFTElement_ratfunc"], [3, 1, 1, "", "DFTInstantiator"], [3, 1, 1, "", "DFTSimulator_double"], [3, 1, 1, "", "DFTSimulator_ratfunc"], [3, 1, 1, "", "DFTStateInfo"], [3, 1, 1, "", "DFTState_double"], [3, 1, 1, "", "DFTState_ratfunc"], [3, 1, 1, "", "DFTSymmetries"], [3, 1, 1, "", "DFT_double"], [3, 1, 1, "", "DFT_ratfunc"], [3, 1, 1, "", "ExplicitDFTModelBuilder_double"], [3, 1, 1, "", "ExplicitDFTModelBuilder_ratfunc"], [3, 1, 1, "", "FailableElement"], [3, 1, 1, "", "FailableElements"], [3, 1, 1, "", "FailableIterator"], [3, 1, 1, "", "RandomGenerator"], [3, 1, 1, "", "RelevantEvents"], [3, 1, 1, "", "SimulationResult"], [3, 6, 1, "", "analyze_dft"], [3, 6, 1, "", "build_model"], [3, 6, 1, "", "compute_dependency_conflicts"], [3, 6, 1, "", "compute_relevant_events"], [3, 6, 1, "", "export_dft_json_file"], [3, 6, 1, "", "export_dft_json_string"], [3, 6, 1, "", "export_parametric_dft_json_file"], [3, 6, 1, "", "export_parametric_dft_json_string"], [3, 6, 1, "", "get_parameters"], [3, 6, 1, "", "is_well_formed"], [3, 6, 1, "", "load_dft_galileo_file"], [3, 6, 1, "", "load_dft_json_file"], [3, 6, 1, "", "load_dft_json_string"], [3, 6, 1, "", "load_parametric_dft_galileo_file"], [3, 6, 1, "", "load_parametric_dft_json_file"], [3, 6, 1, "", "load_parametric_dft_json_string"], [3, 6, 1, "", "prepare_for_analysis"], [3, 6, 1, "", "transform_dft"]], "stormpy.dft.ApproximationHeuristic": [[3, 4, 1, "", "BOUNDDIFFERENCE"], [3, 4, 1, "", "DEPTH"], [3, 4, 1, "", "PROBABILITY"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "stormpy.dft.DFTElementType": [[3, 4, 1, "", "AND"], [3, 4, 1, "", "BE"], [3, 4, 1, "", "MUTEX"], [3, 4, 1, "", "OR"], [3, 4, 1, "", "PAND"], [3, 4, 1, "", "PDEP"], [3, 4, 1, "", "POR"], [3, 4, 1, "", "SEQ"], [3, 4, 1, "", "SPARE"], [3, 4, 1, "", "VOT"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "stormpy.dft.DFTElement_double": [[3, 3, 1, "", "id"], [3, 3, 1, "", "name"], [3, 3, 1, "", "type"]], "stormpy.dft.DFTElement_ratfunc": [[3, 3, 1, "", "id"], [3, 3, 1, "", "name"], [3, 3, 1, "", "type"]], "stormpy.dft.DFTInstantiator": [[3, 2, 1, "", "instantiate"]], "stormpy.dft.DFTSimulator_double": [[3, 2, 1, "", "current"], [3, 2, 1, "", "random_step"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "simulate_trace"], [3, 2, 1, "", "step"]], "stormpy.dft.DFTSimulator_ratfunc": [[3, 2, 1, "", "current"], [3, 2, 1, "", "random_step"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "simulate_trace"], [3, 2, 1, "", "step"]], "stormpy.dft.DFTState_double": [[3, 2, 1, "", "dontcare"], [3, 2, 1, "", "failable"], [3, 2, 1, "", "failed"], [3, 2, 1, "", "failsafe"], [3, 2, 1, "", "invalid"], [3, 2, 1, "", "operational"], [3, 2, 1, "", "spare_uses"], [3, 2, 1, "", "to_string"]], "stormpy.dft.DFTState_ratfunc": [[3, 2, 1, "", "dontcare"], [3, 2, 1, "", "failable"], [3, 2, 1, "", "failed"], [3, 2, 1, "", "failsafe"], [3, 2, 1, "", "invalid"], [3, 2, 1, "", "operational"], [3, 2, 1, "", "spare_uses"], [3, 2, 1, "", "to_string"]], "stormpy.dft.DFTSymmetries": [[3, 3, 1, "", "groups"]], "stormpy.dft.DFT_double": [[3, 2, 1, "", "can_have_nondeterminism"], [3, 2, 1, "", "get_element"], [3, 2, 1, "", "get_element_by_name"], [3, 2, 1, "", "modularisation"], [3, 2, 1, "", "nr_be"], [3, 2, 1, "", "nr_dynamic"], [3, 2, 1, "", "nr_elements"], [3, 2, 1, "", "set_relevant_events"], [3, 2, 1, "", "state_generation_info"], [3, 2, 1, "", "symmetries"], [3, 3, 1, "", "top_level_element"]], "stormpy.dft.DFT_ratfunc": [[3, 2, 1, "", "can_have_nondeterminism"], [3, 2, 1, "", "get_element"], [3, 2, 1, "", "get_element_by_name"], [3, 2, 1, "", "modularisation"], [3, 2, 1, "", "nr_be"], [3, 2, 1, "", "nr_dynamic"], [3, 2, 1, "", "nr_elements"], [3, 2, 1, "", "set_relevant_events"], [3, 2, 1, "", "state_generation_info"], [3, 2, 1, "", "symmetries"], [3, 3, 1, "", "top_level_element"]], "stormpy.dft.ExplicitDFTModelBuilder_double": [[3, 2, 1, "", "build"], [3, 2, 1, "", "get_model"], [3, 2, 1, "", "get_partial_model"]], "stormpy.dft.ExplicitDFTModelBuilder_ratfunc": [[3, 2, 1, "", "build"], [3, 2, 1, "", "get_model"], [3, 2, 1, "", "get_partial_model"]], "stormpy.dft.FailableElement": [[3, 2, 1, "", "due_dependency"], [3, 2, 1, "", "get_fail_be_double"], [3, 2, 1, "", "get_fail_be_ratfunc"]], "stormpy.dft.RandomGenerator": [[3, 2, 1, "", "create"]], "stormpy.dft.RelevantEvents": [[3, 2, 1, "", "is_relevant"]], "stormpy.dft.SimulationResult": [[3, 4, 1, "", "INVAlID"], [3, 4, 1, "", "SUCCESSFUL"], [3, 4, 1, "", "UNSUCCESSFUL"], [3, 3, 1, "", "name"], [3, 3, 1, "", "value"]], "stormpy.exceptions": [[4, 5, 1, "", "StormError"]], "stormpy.gspn": [[5, 1, 1, "", "GSPN"], [5, 1, 1, "", "GSPNBuilder"], [5, 1, 1, "", "GSPNParser"], [5, 1, 1, "", "GSPNToJaniBuilder"], [5, 1, 1, "", "ImmediateTransition"], [5, 1, 1, "", "LayoutInfo"], [5, 1, 1, "", "Place"], [5, 1, 1, "", "TimedTransition"], [5, 1, 1, "", "Transition"], [5, 1, 1, "", "TransitionPartition"]], "stormpy.gspn.GSPN": [[5, 2, 1, "", "export_gspn_pnml_file"], [5, 2, 1, "", "export_gspn_pnpro_file"], [5, 2, 1, "", "get_immediate_transition"], [5, 2, 1, "", "get_immediate_transitions"], [5, 2, 1, "", "get_initial_marking"], [5, 2, 1, "", "get_name"], [5, 2, 1, "", "get_number_of_immediate_transitions"], [5, 2, 1, "", "get_number_of_places"], [5, 2, 1, "", "get_number_of_timed_transitions"], [5, 2, 1, "", "get_partitions"], [5, 2, 1, "", "get_place"], [5, 2, 1, "", "get_places"], [5, 2, 1, "", "get_timed_transition"], [5, 2, 1, "", "get_timed_transitions"], [5, 2, 1, "", "get_transition"], [5, 2, 1, "", "immediate_transition_id_to_transition_id"], [5, 2, 1, "", "is_valid"], [5, 2, 1, "", "set_name"], [5, 2, 1, "", "timed_transition_id_to_transition_id"], [5, 2, 1, "", "transition_id_to_immediate_transition_id"], [5, 2, 1, "", "transition_id_to_timed_transition_id"]], "stormpy.gspn.GSPNBuilder": [[5, 2, 1, "", "add_immediate_transition"], [5, 2, 1, "", "add_inhibition_arc"], [5, 2, 1, "", "add_input_arc"], [5, 2, 1, "", "add_normal_arc"], [5, 2, 1, "", "add_output_arc"], [5, 2, 1, "", "add_place"], [5, 2, 1, "", "add_timed_transition"], [5, 2, 1, "", "build_gspn"], [5, 2, 1, "", "set_name"], [5, 2, 1, "", "set_place_layout_info"], [5, 2, 1, "", "set_transition_layout_info"]], "stormpy.gspn.GSPNParser": [[5, 2, 1, "", "parse"]], "stormpy.gspn.GSPNToJaniBuilder": [[5, 2, 1, "", "build"], [5, 2, 1, "", "create_deadlock_properties"]], "stormpy.gspn.ImmediateTransition": [[5, 2, 1, "", "get_weight"], [5, 2, 1, "", "no_weight_attached"], [5, 2, 1, "", "set_weight"]], "stormpy.gspn.LayoutInfo": [[5, 3, 1, "", "rotation"], [5, 3, 1, "", "x"], [5, 3, 1, "", "y"]], "stormpy.gspn.Place": [[5, 2, 1, "", "get_capacity"], [5, 2, 1, "", "get_id"], [5, 2, 1, "", "get_name"], [5, 2, 1, "", "get_number_of_initial_tokens"], [5, 2, 1, "", "has_restricted_capacity"], [5, 2, 1, "", "set_capacity"], [5, 2, 1, "", "set_name"], [5, 2, 1, "", "set_number_of_initial_tokens"]], "stormpy.gspn.TimedTransition": [[5, 2, 1, "", "get_number_of_servers"], [5, 2, 1, "", "get_rate"], [5, 2, 1, "", "has_infinite_server_semantics"], [5, 2, 1, "", "has_k_server_semantics"], [5, 2, 1, "", "has_single_server_semantics"], [5, 2, 1, "", "set_infinite_server_semantics"], [5, 2, 1, "", "set_k_server_semantics"], [5, 2, 1, "", "set_rate"], [5, 2, 1, "", "set_single_server_semantics"]], "stormpy.gspn.Transition": [[5, 2, 1, "", "exists_inhibition_arc"], [5, 2, 1, "", "exists_input_arc"], [5, 2, 1, "", "exists_output_arc"], [5, 2, 1, "", "fire"], [5, 2, 1, "", "get_id"], [5, 2, 1, "", "get_inhibition_arc_multiplicity"], [5, 2, 1, "", "get_inhibition_places"], [5, 2, 1, "", "get_input_arc_multiplicity"], [5, 2, 1, "", "get_input_places"], [5, 2, 1, "", "get_name"], [5, 2, 1, "", "get_output_arc_multiplicity"], [5, 2, 1, "", "get_output_places"], [5, 2, 1, "", "get_priority"], [5, 2, 1, "", "is_enabled"], [5, 2, 1, "", "remove_inhibition_arc"], [5, 2, 1, "", "remove_input_arc"], [5, 2, 1, "", "remove_output_arc"], [5, 2, 1, "", "set_inhibition_arc_multiplicity"], [5, 2, 1, "", "set_input_arc_multiplicity"], [5, 2, 1, "", "set_name"], [5, 2, 1, "", "set_output_arc_multiplicity"], [5, 2, 1, "", "set_priority"]], "stormpy.gspn.TransitionPartition": [[5, 2, 1, "", "nr_transitions"], [5, 3, 1, "", "priority"], [5, 3, 1, "", "transitions"]], "stormpy.info": [[6, 1, 1, "", "Version"], [6, 6, 1, "", "storm_exact_use_cln"], [6, 6, 1, "", "storm_ratfunc_use_cln"], [6, 6, 1, "", "storm_version"]], "stormpy.info.Version": [[6, 4, 1, "", "build_info"], [6, 4, 1, "", "development"], [6, 4, 1, "", "long"], [6, 4, 1, "", "major"], [6, 4, 1, "", "minor"], [6, 4, 1, "", "patch"], [6, 4, 1, "", "short"]], "stormpy.logic": [[7, 1, 1, "", "AtomicExpressionFormula"], [7, 1, 1, "", "AtomicLabelFormula"], [7, 1, 1, "", "BinaryBooleanOperatorType"], [7, 1, 1, "", "BinaryPathFormula"], [7, 1, 1, "", "BinaryStateFormula"], [7, 1, 1, "", "BooleanBinaryStateFormula"], [7, 1, 1, "", "BooleanLiteralFormula"], [7, 1, 1, "", "BoundedUntilFormula"], [7, 1, 1, "", "ComparisonType"], [7, 1, 1, "", "ConditionalFormula"], [7, 1, 1, "", "CumulativeRewardFormula"], [7, 1, 1, "", "EventuallyFormula"], [7, 1, 1, "", "Formula"], [7, 1, 1, "", "GloballyFormula"], [7, 1, 1, "", "InstantaneousRewardFormula"], [7, 1, 1, "", "LongRunAvarageOperator"], [7, 1, 1, "", "LongRunAverageRewardFormula"], [7, 1, 1, "", "MultiObjectiveFormula"], [7, 1, 1, "", "OperatorFormula"], [7, 1, 1, "", "PathFormula"], [7, 1, 1, "", "ProbabilityOperator"], [7, 1, 1, "", "RewardOperator"], [7, 1, 1, "", "StateFormula"], [7, 1, 1, "", "TimeOperator"], [7, 1, 1, "", "UnaryBooleanStateFormula"], [7, 1, 1, "", "UnaryPathFormula"], [7, 1, 1, "", "UnaryStateFormula"], [7, 1, 1, "", "UntilFormula"]], "stormpy.logic.AtomicExpressionFormula": [[7, 2, 1, "", "get_expression"]], "stormpy.logic.AtomicLabelFormula": [[7, 3, 1, "", "label"]], "stormpy.logic.BinaryBooleanOperatorType": [[7, 4, 1, "", "AND"], [7, 4, 1, "", "OR"], [7, 3, 1, "", "name"], [7, 3, 1, "", "value"]], "stormpy.logic.BinaryPathFormula": [[7, 3, 1, "", "left_subformula"], [7, 3, 1, "", "right_subformula"]], "stormpy.logic.BoundedUntilFormula": [[7, 3, 1, "", "has_lower_bound"], [7, 3, 1, "", "is_multidimensional"], [7, 3, 1, "", "left_subformula"], [7, 3, 1, "", "right_subformula"], [7, 3, 1, "", "upper_bound_expression"]], "stormpy.logic.ComparisonType": [[7, 4, 1, "", "GEQ"], [7, 4, 1, "", "GREATER"], [7, 4, 1, "", "LEQ"], [7, 4, 1, "", "LESS"], [7, 3, 1, "", "name"], [7, 3, 1, "", "value"]], "stormpy.logic.Formula": [[7, 2, 1, "", "clone"], [7, 3, 1, "", "is_bounded_until_formula"], [7, 3, 1, "", "is_eventually_formula"], [7, 3, 1, "", "is_multi_objective_formula"], [7, 3, 1, "", "is_probability_operator"], [7, 3, 1, "", "is_reward_operator"], [7, 3, 1, "", "is_until_formula"], [7, 2, 1, "", "substitute"], [7, 2, 1, "", "substitute_labels_by_labels"]], "stormpy.logic.MultiObjectiveFormula": [[7, 3, 1, "", "nr_subformulas"], [7, 3, 1, "", "subformulas"]], "stormpy.logic.OperatorFormula": [[7, 3, 1, "", "comparison_type"], [7, 3, 1, "", "has_bound"], [7, 3, 1, "", "has_optimality_type"], [7, 3, 1, "", "optimality_type"], [7, 2, 1, "", "remove_bound"], [7, 2, 1, "", "remove_optimality_type"], [7, 2, 1, "", "set_bound"], [7, 2, 1, "", "set_optimality_type"], [7, 3, 1, "", "threshold"], [7, 3, 1, "", "threshold_expr"]], "stormpy.logic.RewardOperator": [[7, 2, 1, "", "has_reward_name"], [7, 3, 1, "", "reward_name"]], "stormpy.logic.UnaryPathFormula": [[7, 3, 1, "", "subformula"]], "stormpy.logic.UnaryStateFormula": [[7, 3, 1, "", "subformula"]], "stormpy.pars": [[8, 1, 1, "", "DtmcParameterLiftingModelChecker"], [8, 1, 1, "", "MdpParameterLiftingModelChecker"], [8, 1, 1, "", "ModelInstantiator"], [8, 1, 1, "", "ModelType"], [8, 1, 1, "", "PCtmcExactInstantiationChecker"], [8, 1, 1, "", "PCtmcInstantiationChecker"], [8, 1, 1, "", "PCtmcInstantiator"], [8, 1, 1, "", "PDtmcExactInstantiationChecker"], [8, 1, 1, "", "PDtmcInstantiationChecker"], [8, 1, 1, "", "PDtmcInstantiator"], [8, 1, 1, "", "PMaInstantiator"], [8, 1, 1, "", "PMdpExactInstantiationChecker"], [8, 1, 1, "", "PMdpInstantiationChecker"], [8, 1, 1, "", "PMdpInstantiator"], [8, 1, 1, "", "ParameterRegion"], [8, 1, 1, "", "PartialPCtmcInstantiator"], [8, 1, 1, "", "PartialPDtmcInstantiator"], [8, 1, 1, "", "PartialPMaInstantiator"], [8, 1, 1, "", "PartialPMdpInstantiator"], [8, 1, 1, "", "RegionModelChecker"], [8, 1, 1, "", "RegionResult"], [8, 1, 1, "", "RegionResultHypothesis"], [8, 5, 1, "", "StormError"], [8, 6, 1, "", "create_region_checker"], [8, 6, 1, "", "gather_derivatives"], [8, 6, 1, "", "simplify_model"]], "stormpy.pars.DtmcParameterLiftingModelChecker": [[8, 2, 1, "", "get_bound_all_states"]], "stormpy.pars.MdpParameterLiftingModelChecker": [[8, 2, 1, "", "get_bound_all_states"]], "stormpy.pars.ModelInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.ModelType": [[8, 4, 1, "", "CTMC"], [8, 4, 1, "", "DTMC"], [8, 4, 1, "", "MA"], [8, 4, 1, "", "MDP"], [8, 4, 1, "", "POMDP"], [8, 3, 1, "", "name"], [8, 3, 1, "", "value"]], "stormpy.pars.PCtmcExactInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PCtmcInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PCtmcInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PDtmcExactInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PDtmcInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PDtmcInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PMaInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PMdpExactInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PMdpInstantiationChecker": [[8, 2, 1, "", "check"], [8, 2, 1, "", "set_graph_preserving"]], "stormpy.pars.PMdpInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.ParameterRegion": [[8, 3, 1, "", "area"], [8, 2, 1, "", "create_from_string"]], "stormpy.pars.PartialPCtmcInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PartialPDtmcInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PartialPMaInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.PartialPMdpInstantiator": [[8, 2, 1, "", "instantiate"]], "stormpy.pars.RegionModelChecker": [[8, 2, 1, "", "check_region"], [8, 2, 1, "", "get_bound"], [8, 2, 1, "", "get_split_suggestion"], [8, 2, 1, "", "specify"]], "stormpy.pars.RegionResult": [[8, 4, 1, "", "ALLSAT"], [8, 4, 1, "", "ALLVIOLATED"], [8, 4, 1, "", "CENTERSAT"], [8, 4, 1, "", "CENTERVIOLATED"], [8, 4, 1, "", "EXISTSBOTH"], [8, 4, 1, "", "EXISTSSAT"], [8, 4, 1, "", "EXISTSVIOLATED"], [8, 4, 1, "", "UNKNOWN"], [8, 2, 1, "", "name"], [8, 3, 1, "", "value"]], "stormpy.pars.RegionResultHypothesis": [[8, 4, 1, "", "ALLSAT"], [8, 4, 1, "", "ALLVIOLATED"], [8, 4, 1, "", "UNKNOWN"], [8, 2, 1, "", "name"], [8, 3, 1, "", "value"]], "stormpy.storage": [[9, 1, 1, "", "Bdd_Sylvan"], [9, 1, 1, "", "BitVector"], [9, 1, 1, "", "ChoiceLabeling"], [9, 1, 1, "", "ChoiceOrigins"], [9, 1, 1, "", "DdManager_Sylvan"], [9, 1, 1, "", "DdMetaVariableType"], [9, 1, 1, "", "DdMetaVariable_Sylvan"], [9, 1, 1, "", "Dd_Sylvan"], [9, 1, 1, "", "DiceStringVisitor"], [9, 1, 1, "", "DistributionDouble"], [9, 1, 1, "", "ExactSparseMatrix"], [9, 1, 1, "", "ExactSparseMatrixBuilder"], [9, 1, 1, "", "ExactSparseMatrixEntry"], [9, 1, 1, "", "ExactSparseMatrixRows"], [9, 1, 1, "", "Expression"], [9, 1, 1, "", "ExpressionManager"], [9, 1, 1, "", "ExpressionParser"], [9, 1, 1, "", "ExpressionType"], [9, 1, 1, "", "ItemLabeling"], [9, 1, 1, "", "JaniAssignment"], [9, 1, 1, "", "JaniAutomaton"], [9, 1, 1, "", "JaniChoiceOrigins"], [9, 1, 1, "", "JaniConstant"], [9, 1, 1, "", "JaniEdge"], [9, 1, 1, "", "JaniEdgeDestination"], [9, 1, 1, "", "JaniInformationObject"], [9, 1, 1, "", "JaniLocation"], [9, 1, 1, "", "JaniLocationExpander"], [9, 1, 1, "", "JaniModel"], [9, 1, 1, "", "JaniOrderedAssignments"], [9, 1, 1, "", "JaniScopeChanger"], [9, 1, 1, "", "JaniTemplateEdge"], [9, 1, 1, "", "JaniTemplateEdgeDestination"], [9, 1, 1, "", "JaniVariable"], [9, 1, 1, "", "JaniVariableSet"], [9, 1, 1, "", "MaximalEndComponent"], [9, 1, 1, "", "MaximalEndComponentDecomposition_double"], [9, 1, 1, "", "MaximalEndComponentDecomposition_exact"], [9, 1, 1, "", "MaximalEndComponentDecomposition_ratfunc"], [9, 1, 1, "", "ModelType"], [9, 1, 1, "", "OperatorType"], [9, 1, 1, "", "OverlappingGuardAnalyser"], [9, 1, 1, "", "ParametricSparseMatrix"], [9, 1, 1, "", "ParametricSparseMatrixBuilder"], [9, 1, 1, "", "ParametricSparseMatrixEntry"], [9, 1, 1, "", "ParametricSparseMatrixRows"], [9, 1, 1, "", "PolytopeDouble"], [9, 1, 1, "", "PolytopeExact"], [9, 1, 1, "", "PrismAssignment"], [9, 1, 1, "", "PrismBooleanVariable"], [9, 1, 1, "", "PrismChoiceOrigins"], [9, 1, 1, "", "PrismCommand"], [9, 1, 1, "", "PrismConstant"], [9, 1, 1, "", "PrismIntegerVariable"], [9, 1, 1, "", "PrismLabel"], [9, 1, 1, "", "PrismModelType"], [9, 1, 1, "", "PrismModule"], [9, 1, 1, "", "PrismProgram"], [9, 1, 1, "", "PrismRewardModel"], [9, 1, 1, "", "PrismUpdate"], [9, 1, 1, "", "PrismVariable"], [9, 1, 1, "", "SchedulerChoiceDouble"], [9, 1, 1, "", "SchedulerChoiceExact"], [9, 1, 1, "", "SchedulerDouble"], [9, 1, 1, "", "SchedulerExact"], [9, 1, 1, "", "SimpleValuation"], [9, 1, 1, "", "SparseCtmc"], [9, 1, 1, "", "SparseDtmc"], [9, 1, 1, "", "SparseExactCtmc"], [9, 1, 1, "", "SparseExactDtmc"], [9, 1, 1, "", "SparseExactMA"], [9, 1, 1, "", "SparseExactMdp"], [9, 1, 1, "", "SparseExactModelAction"], [9, 1, 1, "", "SparseExactModelActions"], [9, 1, 1, "", "SparseExactModelComponents"], [9, 1, 1, "", "SparseExactModelState"], [9, 1, 1, "", "SparseExactModelStates"], [9, 1, 1, "", "SparseExactPomdp"], [9, 1, 1, "", "SparseExactRewardModel"], [9, 1, 1, "", "SparseMA"], [9, 1, 1, "", "SparseMatrix"], [9, 1, 1, "", "SparseMatrixBuilder"], [9, 1, 1, "", "SparseMatrixEntry"], [9, 1, 1, "", "SparseMatrixRows"], [9, 1, 1, "", "SparseMdp"], [9, 1, 1, "", "SparseModelAction"], [9, 1, 1, "", "SparseModelActions"], [9, 1, 1, "", "SparseModelComponents"], [9, 1, 1, "", "SparseModelState"], [9, 1, 1, "", "SparseModelStates"], [9, 1, 1, "", "SparseParametricCtmc"], [9, 1, 1, "", "SparseParametricDtmc"], [9, 1, 1, "", "SparseParametricMA"], [9, 1, 1, "", "SparseParametricMdp"], [9, 1, 1, "", "SparseParametricModelAction"], [9, 1, 1, "", "SparseParametricModelActions"], [9, 1, 1, "", "SparseParametricModelState"], [9, 1, 1, "", "SparseParametricModelStates"], [9, 1, 1, "", "SparseParametricPomdp"], [9, 1, 1, "", "SparseParametricRewardModel"], [9, 1, 1, "", "SparsePomdp"], [9, 1, 1, "", "SparseRewardModel"], [9, 1, 1, "", "StateLabeling"], [9, 1, 1, "", "StateValuation"], [9, 1, 1, "", "StateValuationsBuilder"], [9, 1, 1, "", "SymbolicSylvanCtmc"], [9, 1, 1, "", "SymbolicSylvanDtmc"], [9, 1, 1, "", "SymbolicSylvanMA"], [9, 1, 1, "", "SymbolicSylvanMdp"], [9, 1, 1, "", "SymbolicSylvanParametricCtmc"], [9, 1, 1, "", "SymbolicSylvanParametricDtmc"], [9, 1, 1, "", "SymbolicSylvanParametricMA"], [9, 1, 1, "", "SymbolicSylvanParametricMdp"], [9, 1, 1, "", "SymbolicSylvanParametricRewardModel"], [9, 1, 1, "", "SymbolicSylvanRewardModel"], [9, 1, 1, "", "Variable"], [9, 6, 1, "", "build_parametric_sparse_matrix"], [9, 6, 1, "", "build_sparse_matrix"], [9, 6, 1, "", "collect_information"], [9, 6, 1, "", "eliminate_reward_accumulations"], [9, 6, 1, "", "get_maximal_end_components"]], "stormpy.storage.Bdd_Sylvan": [[9, 2, 1, "", "to_expression"]], "stormpy.storage.BitVector": [[9, 2, 1, "", "get"], [9, 2, 1, "", "load_from_string"], [9, 2, 1, "", "number_of_set_bits"], [9, 2, 1, "", "set"], [9, 2, 1, "", "size"], [9, 2, 1, "", "store_as_string"]], "stormpy.storage.ChoiceLabeling": [[9, 2, 1, "", "add_label_to_choice"], [9, 2, 1, "", "get_choices"], [9, 2, 1, "", "get_labels_of_choice"], [9, 2, 1, "", "set_choices"]], "stormpy.storage.ChoiceOrigins": [[9, 2, 1, "", "as_jani_choice_origins"], [9, 2, 1, "", "as_prism_choice_origins"], [9, 2, 1, "", "get_choice_info"], [9, 2, 1, "", "get_identifier_info"], [9, 2, 1, "", "get_number_of_identifiers"], [9, 2, 1, "", "is_jani_choice_origins"], [9, 2, 1, "", "is_prism_choice_origins"]], "stormpy.storage.DdManager_Sylvan": [[9, 2, 1, "", "get_meta_variable"]], "stormpy.storage.DdMetaVariableType": [[9, 4, 1, "", "Bitvector"], [9, 4, 1, "", "Bool"], [9, 4, 1, "", "Int"], [9, 3, 1, "", "name"], [9, 3, 1, "", "value"]], "stormpy.storage.DdMetaVariable_Sylvan": [[9, 2, 1, "", "compute_indices"], [9, 3, 1, "", "lowest_value"], [9, 3, 1, "", "name"], [9, 3, 1, "", "type"]], "stormpy.storage.Dd_Sylvan": [[9, 3, 1, "", "dd_manager"], [9, 3, 1, "", "meta_variables"], [9, 3, 1, "", "node_count"]], "stormpy.storage.DiceStringVisitor": [[9, 2, 1, "", "to_string"]], "stormpy.storage.ExactSparseMatrix": [[9, 2, 1, "", "get_row"], [9, 2, 1, "", "get_row_group_end"], [9, 2, 1, "", "get_row_group_start"], [9, 2, 1, "", "get_rows"], [9, 3, 1, "", "has_trivial_row_grouping"], [9, 3, 1, "", "nr_columns"], [9, 3, 1, "", "nr_entries"], [9, 3, 1, "", "nr_rows"], [9, 2, 1, "", "print_row"], [9, 2, 1, "", "row_iter"], [9, 2, 1, "", "submatrix"]], "stormpy.storage.ExactSparseMatrixBuilder": [[9, 2, 1, "", "add_next_value"], [9, 2, 1, "", "build"], [9, 2, 1, "", "get_current_row_group_count"], [9, 2, 1, "", "get_last_column"], [9, 2, 1, "", "get_last_row"], [9, 2, 1, "", "new_row_group"], [9, 2, 1, "", "replace_columns"]], "stormpy.storage.ExactSparseMatrixEntry": [[9, 3, 1, "", "column"], [9, 2, 1, "", "set_value"], [9, 2, 1, "", "value"]], "stormpy.storage.Expression": [[9, 2, 1, "", "And"], [9, 2, 1, "", "Conjunction"], [9, 2, 1, "", "Disjunction"], [9, 2, 1, "", "Divide"], [9, 2, 1, "", "Eq"], [9, 2, 1, "", "Geq"], [9, 2, 1, "", "Greater"], [9, 2, 1, "", "Iff"], [9, 2, 1, "", "Implies"], [9, 2, 1, "", "Leq"], [9, 2, 1, "", "Less"], [9, 2, 1, "", "Minus"], [9, 2, 1, "", "Modulo"], [9, 2, 1, "", "Multiply"], [9, 2, 1, "", "Neq"], [9, 2, 1, "", "Or"], [9, 2, 1, "", "Plus"], [9, 3, 1, "", "arity"], [9, 2, 1, "", "contains_variable"], [9, 2, 1, "", "contains_variables"], [9, 2, 1, "", "evaluate_as_bool"], [9, 2, 1, "", "evaluate_as_double"], [9, 2, 1, "", "evaluate_as_int"], [9, 2, 1, "", "evaluate_as_rational"], [9, 2, 1, "", "get_operand"], [9, 2, 1, "", "get_variables"], [9, 2, 1, "", "has_boolean_type"], [9, 2, 1, "", "has_integer_type"], [9, 2, 1, "", "has_rational_type"], [9, 2, 1, "", "identifier"], [9, 3, 1, "", "is_function_application"], [9, 2, 1, "", "is_literal"], [9, 2, 1, "", "is_variable"], [9, 3, 1, "", "manager"], [9, 3, 1, "", "operator"], [9, 2, 1, "", "simplify"], [9, 2, 1, "", "substitute"], [9, 3, 1, "", "type"]], "stormpy.storage.ExpressionManager": [[9, 2, 1, "", "create_boolean"], [9, 2, 1, "", "create_boolean_variable"], [9, 2, 1, "", "create_integer"], [9, 2, 1, "", "create_integer_variable"], [9, 2, 1, "", "create_rational"], [9, 2, 1, "", "create_rational_variable"], [9, 2, 1, "", "get_variable"], [9, 2, 1, "", "get_variables"]], "stormpy.storage.ExpressionParser": [[9, 2, 1, "", "parse"], [9, 2, 1, "", "set_identifier_mapping"]], "stormpy.storage.ExpressionType": [[9, 3, 1, "", "is_boolean"], [9, 3, 1, "", "is_integer"], [9, 3, 1, "", "is_rational"]], "stormpy.storage.ItemLabeling": [[9, 2, 1, "", "add_label"], [9, 2, 1, "", "contains_label"], [9, 2, 1, "", "get_labels"]], "stormpy.storage.JaniAssignment": [[9, 3, 1, "", "expression"], [9, 3, 1, "", "variable"]], "stormpy.storage.JaniAutomaton": [[9, 2, 1, "", "add_edge"], [9, 2, 1, "", "add_initial_location"], [9, 2, 1, "", "add_location"], [9, 3, 1, "", "edges"], [9, 2, 1, "", "get_location_index"], [9, 3, 1, "", "initial_location_indices"], [9, 3, 1, "", "initial_states_restriction"], [9, 3, 1, "", "location_variable"], [9, 3, 1, "", "locations"], [9, 3, 1, "", "name"], [9, 3, 1, "", "variables"]], "stormpy.storage.JaniChoiceOrigins": [[9, 2, 1, "", "get_edge_index_set"], [9, 3, 1, "", "model"]], "stormpy.storage.JaniConstant": [[9, 3, 1, "", "defined"], [9, 3, 1, "", "expression_variable"], [9, 3, 1, "", "name"], [9, 3, 1, "", "type"]], "stormpy.storage.JaniEdge": [[9, 3, 1, "", "action_index"], [9, 3, 1, "", "color"], [9, 3, 1, "", "destinations"], [9, 3, 1, "", "guard"], [9, 2, 1, "", "has_silent_action"], [9, 3, 1, "", "nr_destinations"], [9, 3, 1, "", "rate"], [9, 3, 1, "", "source_location_index"], [9, 2, 1, "", "substitute"], [9, 3, 1, "", "template_edge"]], "stormpy.storage.JaniEdgeDestination": [[9, 3, 1, "", "assignments"], [9, 3, 1, "", "probability"], [9, 3, 1, "", "target_location_index"]], "stormpy.storage.JaniInformationObject": [[9, 3, 1, "", "avg_var_domain_size"], [9, 3, 1, "", "model_type"], [9, 3, 1, "", "nr_automata"], [9, 3, 1, "", "nr_edges"], [9, 3, 1, "", "nr_variables"], [9, 3, 1, "", "state_domain_size"]], "stormpy.storage.JaniLocation": [[9, 3, 1, "", "assignments"], [9, 3, 1, "", "name"]], "stormpy.storage.JaniLocationExpander": [[9, 2, 1, "", "transform"]], "stormpy.storage.JaniModel": [[9, 2, 1, "", "add_automaton"], [9, 2, 1, "", "add_constant"], [9, 3, 1, "", "automata"], [9, 2, 1, "", "check_valid"], [9, 3, 1, "", "constants"], [9, 2, 1, "", "decode_automaton_and_edge_index"], [9, 2, 1, "", "define_constants"], [9, 2, 1, "", "encode_automaton_and_edge_index"], [9, 3, 1, "", "expression_manager"], [9, 2, 1, "", "finalize"], [9, 2, 1, "", "flatten_composition"], [9, 2, 1, "", "get_automaton"], [9, 2, 1, "", "get_automaton_index"], [9, 2, 1, "", "get_constant"], [9, 3, 1, "", "global_variables"], [9, 2, 1, "", "has_standard_composition"], [9, 3, 1, "", "has_undefined_constants"], [9, 3, 1, "", "initial_states_restriction"], [9, 2, 1, "", "make_standard_compliant"], [9, 3, 1, "", "model_type"], [9, 3, 1, "", "name"], [9, 2, 1, "", "remove_constant"], [9, 2, 1, "", "replace_automaton"], [9, 2, 1, "", "restrict_edges"], [9, 2, 1, "", "set_model_type"], [9, 2, 1, "", "set_standard_system_composition"], [9, 2, 1, "", "substitute_constants"], [9, 2, 1, "", "substitute_functions"], [9, 2, 1, "", "to_dot"], [9, 3, 1, "", "undefined_constants_are_graph_preserving"]], "stormpy.storage.JaniOrderedAssignments": [[9, 2, 1, "", "add"], [9, 2, 1, "", "clone"], [9, 2, 1, "", "substitute"]], "stormpy.storage.JaniScopeChanger": [[9, 2, 1, "", "make_variables_local"]], "stormpy.storage.JaniTemplateEdge": [[9, 2, 1, "", "add_destination"], [9, 3, 1, "", "assignments"], [9, 3, 1, "", "destinations"], [9, 3, 1, "", "guard"]], "stormpy.storage.JaniTemplateEdgeDestination": [[9, 3, 1, "", "assignments"]], "stormpy.storage.JaniVariable": [[9, 3, 1, "", "expression_variable"], [9, 3, 1, "", "init_expression"], [9, 3, 1, "", "name"]], "stormpy.storage.JaniVariableSet": [[9, 2, 1, "", "add_variable"], [9, 2, 1, "", "empty"], [9, 2, 1, "", "erase_variable"], [9, 2, 1, "", "get_variable_by_expr_variable"], [9, 2, 1, "", "get_variable_by_name"]], "stormpy.storage.MaximalEndComponent": [[9, 3, 1, "", "size"]], "stormpy.storage.MaximalEndComponentDecomposition_double": [[9, 3, 1, "", "size"]], "stormpy.storage.MaximalEndComponentDecomposition_exact": [[9, 3, 1, "", "size"]], "stormpy.storage.MaximalEndComponentDecomposition_ratfunc": [[9, 3, 1, "", "size"]], "stormpy.storage.ModelType": [[9, 4, 1, "", "CTMC"], [9, 4, 1, "", "DTMC"], [9, 4, 1, "", "MA"], [9, 4, 1, "", "MDP"], [9, 4, 1, "", "POMDP"], [9, 3, 1, "", "name"], [9, 3, 1, "", "value"]], "stormpy.storage.OperatorType": [[9, 4, 1, "", "And"], [9, 4, 1, "", "Ceil"], [9, 4, 1, "", "Divide"], [9, 4, 1, "", "Equal"], [9, 4, 1, "", "Floor"], [9, 4, 1, "", "Greater"], [9, 4, 1, "", "GreaterOrEqual"], [9, 4, 1, "", "Iff"], [9, 4, 1, "", "Implies"], [9, 4, 1, "", "Ite"], [9, 4, 1, "", "Less"], [9, 4, 1, "", "LessOrEqual"], [9, 4, 1, "", "Max"], [9, 4, 1, "", "Min"], [9, 4, 1, "", "Minus"], [9, 4, 1, "", "Modulo"], [9, 4, 1, "", "Not"], [9, 4, 1, "", "NotEqual"], [9, 4, 1, "", "Or"], [9, 4, 1, "", "Plus"], [9, 4, 1, "", "Power"], [9, 4, 1, "", "Times"], [9, 4, 1, "", "Xor"], [9, 3, 1, "", "name"], [9, 3, 1, "", "value"]], "stormpy.storage.OverlappingGuardAnalyser": [[9, 2, 1, "", "has_module_with_inner_action_overlapping_guard"]], "stormpy.storage.ParametricSparseMatrix": [[9, 2, 1, "", "get_row"], [9, 2, 1, "", "get_row_group_end"], [9, 2, 1, "", "get_row_group_start"], [9, 2, 1, "", "get_rows"], [9, 3, 1, "", "has_trivial_row_grouping"], [9, 3, 1, "", "nr_columns"], [9, 3, 1, "", "nr_entries"], [9, 3, 1, "", "nr_rows"], [9, 2, 1, "", "print_row"], [9, 2, 1, "", "row_iter"], [9, 2, 1, "", "submatrix"]], "stormpy.storage.ParametricSparseMatrixBuilder": [[9, 2, 1, "", "add_next_value"], [9, 2, 1, "", "build"], [9, 2, 1, "", "get_current_row_group_count"], [9, 2, 1, "", "get_last_column"], [9, 2, 1, "", "get_last_row"], [9, 2, 1, "", "new_row_group"], [9, 2, 1, "", "replace_columns"]], "stormpy.storage.ParametricSparseMatrixEntry": [[9, 3, 1, "", "column"], [9, 2, 1, "", "set_value"], [9, 2, 1, "", "value"]], "stormpy.storage.PolytopeDouble": [[9, 2, 1, "", "create_downward_closure"], [9, 2, 1, "", "get_vertices_clockwise"], [9, 3, 1, "", "vertices"]], "stormpy.storage.PolytopeExact": [[9, 2, 1, "", "create_downward_closure"], [9, 2, 1, "", "get_vertices_clockwise"], [9, 3, 1, "", "vertices"]], "stormpy.storage.PrismAssignment": [[9, 3, 1, "", "expression"], [9, 3, 1, "", "variable"]], "stormpy.storage.PrismChoiceOrigins": [[9, 2, 1, "", "get_command_set"], [9, 3, 1, "", "program"]], "stormpy.storage.PrismCommand": [[9, 3, 1, "", "action_index"], [9, 3, 1, "", "action_name"], [9, 3, 1, "", "global_index"], [9, 3, 1, "", "guard_expression"], [9, 3, 1, "", "is_labeled"], [9, 3, 1, "", "labeled"], [9, 3, 1, "", "updates"]], "stormpy.storage.PrismConstant": [[9, 3, 1, "", "defined"], [9, 3, 1, "", "definition"], [9, 3, 1, "", "expression_variable"], [9, 3, 1, "", "name"], [9, 3, 1, "", "type"]], "stormpy.storage.PrismIntegerVariable": [[9, 3, 1, "", "lower_bound_expression"], [9, 3, 1, "", "upper_bound_expression"]], "stormpy.storage.PrismLabel": [[9, 3, 1, "", "expression"], [9, 3, 1, "", "name"]], "stormpy.storage.PrismModelType": [[9, 4, 1, "", "CTMC"], [9, 4, 1, "", "CTMDP"], [9, 4, 1, "", "DTMC"], [9, 4, 1, "", "MA"], [9, 4, 1, "", "MDP"], [9, 4, 1, "", "POMDP"], [9, 4, 1, "", "UNDEFINED"], [9, 3, 1, "", "name"], [9, 3, 1, "", "value"]], "stormpy.storage.PrismModule": [[9, 3, 1, "", "boolean_variables"], [9, 3, 1, "", "commands"], [9, 2, 1, "", "get_boolean_variable"], [9, 2, 1, "", "get_command_indices_by_action_index"], [9, 2, 1, "", "get_integer_variable"], [9, 3, 1, "", "integer_variables"], [9, 3, 1, "", "name"]], "stormpy.storage.PrismProgram": [[9, 3, 1, "", "constants"], [9, 2, 1, "", "define_constants"], [9, 3, 1, "", "expression_manager"], [9, 2, 1, "", "flatten"], [9, 2, 1, "", "get_action_name"], [9, 2, 1, "", "get_constant"], [9, 2, 1, "", "get_label_expression"], [9, 2, 1, "", "get_module"], [9, 2, 1, "", "get_module_indices_by_action_index"], [9, 2, 1, "", "get_synchronizing_action_indices"], [9, 3, 1, "", "global_boolean_variables"], [9, 3, 1, "", "global_integer_variables"], [9, 3, 1, "", "hasUndefinedConstants"], [9, 2, 1, "", "has_constant"], [9, 2, 1, "", "has_label"], [9, 3, 1, "", "has_undefined_constants"], [9, 3, 1, "", "is_deterministic_model"], [9, 2, 1, "", "label_unlabelled_commands"], [9, 3, 1, "", "labels"], [9, 3, 1, "", "model_type"], [9, 3, 1, "", "modules"], [9, 3, 1, "", "nr_modules"], [9, 3, 1, "", "number_of_unlabeled_commands"], [9, 2, 1, "", "restrict_commands"], [9, 3, 1, "", "reward_models"], [9, 2, 1, "", "simplify"], [9, 2, 1, "", "substitute_constants"], [9, 2, 1, "", "substitute_formulas"], [9, 2, 1, "", "substitute_nonstandard_predicates"], [9, 2, 1, "", "to_jani"], [9, 3, 1, "", "undefined_constants_are_graph_preserving"], [9, 2, 1, "", "used_constants"], [9, 3, 1, "", "variables"]], "stormpy.storage.PrismRewardModel": [[9, 3, 1, "", "name"]], "stormpy.storage.PrismUpdate": [[9, 3, 1, "", "assignments"], [9, 2, 1, "", "get_as_variable_to_expression_map"], [9, 2, 1, "", "get_assignment"], [9, 3, 1, "", "global_index"], [9, 3, 1, "", "probability_expression"], [9, 2, 1, "", "simplify"], [9, 2, 1, "", "substitute"]], "stormpy.storage.PrismVariable": [[9, 3, 1, "", "expression_variable"], [9, 3, 1, "", "initial_value_expression"], [9, 3, 1, "", "name"]], "stormpy.storage.SchedulerChoiceDouble": [[9, 3, 1, "", "defined"], [9, 3, 1, "", "deterministic"], [9, 2, 1, "", "get_choice"], [9, 2, 1, "", "get_deterministic_choice"]], "stormpy.storage.SchedulerChoiceExact": [[9, 3, 1, "", "defined"], [9, 3, 1, "", "deterministic"], [9, 2, 1, "", "get_choice"], [9, 2, 1, "", "get_deterministic_choice"]], "stormpy.storage.SchedulerDouble": [[9, 2, 1, "", "compute_action_support"], [9, 3, 1, "", "deterministic"], [9, 2, 1, "", "get_choice"], [9, 3, 1, "", "memory_size"], [9, 3, 1, "", "memoryless"], [9, 3, 1, "", "partial"]], "stormpy.storage.SchedulerExact": [[9, 2, 1, "", "compute_action_support"], [9, 3, 1, "", "deterministic"], [9, 2, 1, "", "get_choice"], [9, 3, 1, "", "memory_size"], [9, 3, 1, "", "memoryless"], [9, 3, 1, "", "partial"]], "stormpy.storage.SimpleValuation": [[9, 2, 1, "", "get_boolean_value"], [9, 2, 1, "", "get_integer_value"], [9, 2, 1, "", "to_json"]], "stormpy.storage.SparseCtmc": [[9, 3, 1, "", "exit_rates"]], "stormpy.storage.SparseExactCtmc": [[9, 3, 1, "", "exit_rates"]], "stormpy.storage.SparseExactMA": [[9, 2, 1, "", "apply_scheduler"], [9, 2, 1, "", "convert_to_ctmc"], [9, 3, 1, "", "convertible_to_ctmc"], [9, 3, 1, "", "exit_rates"], [9, 3, 1, "", "markovian_states"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseExactMdp": [[9, 2, 1, "", "apply_scheduler"], [9, 2, 1, "", "get_choice_index"], [9, 2, 1, "", "get_nr_available_actions"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseExactModelAction": [[9, 3, 1, "", "id"], [9, 3, 1, "", "transitions"]], "stormpy.storage.SparseExactModelComponents": [[9, 3, 1, "", "choice_labeling"], [9, 3, 1, "", "choice_origins"], [9, 3, 1, "", "exit_rates"], [9, 3, 1, "", "markovian_states"], [9, 3, 1, "", "observability_classes"], [9, 3, 1, "", "player1_matrix"], [9, 3, 1, "", "rate_transitions"], [9, 3, 1, "", "reward_models"], [9, 3, 1, "", "state_labeling"], [9, 3, 1, "", "state_valuations"], [9, 3, 1, "", "transition_matrix"]], "stormpy.storage.SparseExactModelState": [[9, 3, 1, "", "actions"], [9, 3, 1, "", "id"], [9, 3, 1, "", "labels"]], "stormpy.storage.SparseExactPomdp": [[9, 2, 1, "", "get_observation"], [9, 2, 1, "", "has_observation_valuations"], [9, 3, 1, "", "nr_observations"], [9, 3, 1, "", "observation_valuations"], [9, 3, 1, "", "observations"]], "stormpy.storage.SparseExactRewardModel": [[9, 2, 1, "", "get_state_action_reward"], [9, 2, 1, "", "get_state_reward"], [9, 2, 1, "", "get_zero_reward_states"], [9, 3, 1, "", "has_state_action_rewards"], [9, 3, 1, "", "has_state_rewards"], [9, 3, 1, "", "has_transition_rewards"], [9, 2, 1, "", "reduce_to_state_based_rewards"], [9, 2, 1, "", "set_state_reward"], [9, 3, 1, "", "state_action_rewards"], [9, 3, 1, "", "state_rewards"], [9, 3, 1, "", "transition_rewards"]], "stormpy.storage.SparseMA": [[9, 2, 1, "", "apply_scheduler"], [9, 2, 1, "", "convert_to_ctmc"], [9, 3, 1, "", "convertible_to_ctmc"], [9, 3, 1, "", "exit_rates"], [9, 3, 1, "", "markovian_states"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseMatrix": [[9, 2, 1, "", "get_row"], [9, 2, 1, "", "get_row_group_end"], [9, 2, 1, "", "get_row_group_start"], [9, 2, 1, "", "get_rows"], [9, 3, 1, "", "has_trivial_row_grouping"], [9, 3, 1, "", "nr_columns"], [9, 3, 1, "", "nr_entries"], [9, 3, 1, "", "nr_rows"], [9, 2, 1, "", "print_row"], [9, 2, 1, "", "row_iter"], [9, 2, 1, "", "submatrix"]], "stormpy.storage.SparseMatrixBuilder": [[9, 2, 1, "", "add_next_value"], [9, 2, 1, "", "build"], [9, 2, 1, "", "get_current_row_group_count"], [9, 2, 1, "", "get_last_column"], [9, 2, 1, "", "get_last_row"], [9, 2, 1, "", "new_row_group"], [9, 2, 1, "", "replace_columns"]], "stormpy.storage.SparseMatrixEntry": [[9, 3, 1, "", "column"], [9, 2, 1, "", "set_value"], [9, 2, 1, "", "value"]], "stormpy.storage.SparseMdp": [[9, 2, 1, "", "apply_scheduler"], [9, 2, 1, "", "get_choice_index"], [9, 2, 1, "", "get_nr_available_actions"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseModelAction": [[9, 3, 1, "", "id"], [9, 3, 1, "", "transitions"]], "stormpy.storage.SparseModelComponents": [[9, 3, 1, "", "choice_labeling"], [9, 3, 1, "", "choice_origins"], [9, 3, 1, "", "exit_rates"], [9, 3, 1, "", "markovian_states"], [9, 3, 1, "", "observability_classes"], [9, 3, 1, "", "player1_matrix"], [9, 3, 1, "", "rate_transitions"], [9, 3, 1, "", "reward_models"], [9, 3, 1, "", "state_labeling"], [9, 3, 1, "", "state_valuations"], [9, 3, 1, "", "transition_matrix"]], "stormpy.storage.SparseModelState": [[9, 3, 1, "", "actions"], [9, 3, 1, "", "id"], [9, 3, 1, "", "labels"]], "stormpy.storage.SparseParametricMA": [[9, 2, 1, "", "apply_scheduler"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseParametricMdp": [[9, 2, 1, "", "apply_scheduler"], [9, 2, 1, "", "get_nr_available_actions"], [9, 3, 1, "", "nondeterministic_choice_indices"]], "stormpy.storage.SparseParametricModelAction": [[9, 3, 1, "", "id"], [9, 3, 1, "", "transitions"]], "stormpy.storage.SparseParametricModelState": [[9, 3, 1, "", "actions"], [9, 3, 1, "", "id"], [9, 3, 1, "", "labels"]], "stormpy.storage.SparseParametricPomdp": [[9, 2, 1, "", "get_observation"], [9, 3, 1, "", "nr_observations"], [9, 3, 1, "", "observations"]], "stormpy.storage.SparseParametricRewardModel": [[9, 2, 1, "", "get_state_action_reward"], [9, 2, 1, "", "get_state_reward"], [9, 3, 1, "", "has_state_action_rewards"], [9, 3, 1, "", "has_state_rewards"], [9, 3, 1, "", "has_transition_rewards"], [9, 2, 1, "", "reduce_to_state_based_rewards"], [9, 3, 1, "", "state_action_rewards"], [9, 3, 1, "", "state_rewards"], [9, 3, 1, "", "transition_rewards"]], "stormpy.storage.SparsePomdp": [[9, 2, 1, "", "get_observation"], [9, 2, 1, "", "has_observation_valuations"], [9, 3, 1, "", "nr_observations"], [9, 3, 1, "", "observation_valuations"], [9, 3, 1, "", "observations"]], "stormpy.storage.SparseRewardModel": [[9, 2, 1, "", "get_state_action_reward"], [9, 2, 1, "", "get_state_reward"], [9, 2, 1, "", "get_zero_reward_states"], [9, 3, 1, "", "has_state_action_rewards"], [9, 3, 1, "", "has_state_rewards"], [9, 3, 1, "", "has_transition_rewards"], [9, 2, 1, "", "reduce_to_state_based_rewards"], [9, 2, 1, "", "set_state_reward"], [9, 3, 1, "", "state_action_rewards"], [9, 3, 1, "", "state_rewards"], [9, 3, 1, "", "transition_rewards"]], "stormpy.storage.StateLabeling": [[9, 2, 1, "", "add_label_to_state"], [9, 2, 1, "", "get_labels_of_state"], [9, 2, 1, "", "get_states"], [9, 2, 1, "", "has_state_label"], [9, 2, 1, "", "set_states"]], "stormpy.storage.StateValuation": [[9, 2, 1, "", "get_boolean_value"], [9, 2, 1, "", "get_integer_value"], [9, 2, 1, "", "get_json"], [9, 2, 1, "", "get_nr_of_states"], [9, 2, 1, "", "get_rational_value"], [9, 2, 1, "", "get_string"]], "stormpy.storage.StateValuationsBuilder": [[9, 2, 1, "", "add_state"], [9, 2, 1, "", "add_variable"], [9, 2, 1, "", "build"]], "stormpy.storage.SymbolicSylvanParametricRewardModel": [[9, 3, 1, "", "has_state_action_rewards"], [9, 3, 1, "", "has_state_rewards"], [9, 3, 1, "", "has_transition_rewards"]], "stormpy.storage.SymbolicSylvanRewardModel": [[9, 3, 1, "", "has_state_action_rewards"], [9, 3, 1, "", "has_state_rewards"], [9, 3, 1, "", "has_transition_rewards"]], "stormpy.storage.Variable": [[9, 2, 1, "", "get_expression"], [9, 2, 1, "", "has_bitvector_type"], [9, 2, 1, "", "has_boolean_type"], [9, 2, 1, "", "has_integer_type"], [9, 2, 1, "", "has_numerical_type"], [9, 2, 1, "", "has_rational_type"], [9, 3, 1, "", "manager"], [9, 3, 1, "", "name"]], "stormpy.utility": [[10, 1, 1, "", "JsonContainerDouble"], [10, 1, 1, "", "JsonContainerRational"], [10, 1, 1, "", "MatrixFormat"], [10, 1, 1, "", "ModelReference"], [10, 1, 1, "", "Path"], [10, 1, 1, "", "ShortestPathsGenerator"], [10, 1, 1, "", "SmtCheckResult"], [10, 1, 1, "", "SmtSolver"], [10, 1, 1, "", "SmtSolverFactory"], [10, 1, 1, "", "Z3SmtSolver"], [10, 1, 1, "", "Z3SmtSolverFactory"], [10, 1, 1, "", "milliseconds"]], "stormpy.utility.MatrixFormat": [[10, 4, 1, "", "I_Minus_P"], [10, 4, 1, "", "Straight"], [10, 3, 1, "", "name"], [10, 3, 1, "", "value"]], "stormpy.utility.ModelReference": [[10, 2, 1, "", "get_boolean_value"], [10, 2, 1, "", "get_integer_value"], [10, 2, 1, "", "get_rational_value"]], "stormpy.utility.Path": [[10, 3, 1, "", "distance"], [10, 3, 1, "", "predecessorK"], [10, 3, 1, "", "predecessorNode"]], "stormpy.utility.ShortestPathsGenerator": [[10, 2, 1, "", "get_distance"], [10, 2, 1, "", "get_path_as_list"], [10, 2, 1, "", "get_states"]], "stormpy.utility.SmtCheckResult": [[10, 4, 1, "", "Sat"], [10, 4, 1, "", "Unknown"], [10, 4, 1, "", "Unsat"], [10, 3, 1, "", "name"], [10, 3, 1, "", "value"]], "stormpy.utility.SmtSolver": [[10, 2, 1, "", "add"], [10, 2, 1, "", "check"], [10, 3, 1, "", "model"], [10, 2, 1, "", "pop"], [10, 2, 1, "", "push"], [10, 2, 1, "", "reset"]], "stormpy.utility.milliseconds": [[10, 2, 1, "", "count"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"advanc": 0, "exampl": 0, "content": [0, 28], "stormpi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 27, 28, 29], "api": [1, 28], "refer": [1, 28], "modul": [1, 28], "core": 2, "dft": [3, 14], "except": 4, "gspn": [5, 17], "info": 6, "logic": 7, "par": 8, "storag": 9, "util": 10, "contributor": 11, "analysi": 12, "background": [12, 13, 15, 16, 18, 19, 20, 21, 25], "qualit": 12, "adapt": 12, "model": [12, 13, 16, 18, 19, 20, 21, 22, 23, 26, 27], "check": [12, 22, 27], "engin": [12, 15], "algorithm": 12, "build": [13, 14, 17, 18, 19, 20, 21, 27, 29], "differ": 13, "formal": 13, "dynam": 14, "fault": 14, "tree": 14, "analyz": 14, "spars": 15, "symbol": 15, "hybrid": 15, "explor": [16, 23], "read": 16, "mdp": [16, 21, 24, 26], "pomdp": [16, 21], "sort": 16, "state": [16, 20, 26, 27], "ma": [16, 20], "gener": 17, "stochast": 17, "petri": 17, "net": 17, "load": 17, "continu": 18, "time": [18, 19], "markov": [18, 19, 20, 21, 24], "chain": [18, 19], "ctmc": 18, "transit": [18, 19, 20, 21], "matrix": [18, 19, 20, 21], "label": [18, 19, 21], "exit": 18, "rate": 18, "discret": 19, "dtmc": [19, 26], "reward": [19, 21, 23], "automata": [20, 24], "markovian": 20, "decis": 21, "process": 21, "partial": 21, "observ": 21, "parametr": 22, "instanti": 22, "collect": 22, "inform": 22, "about": 22, "work": [24, 25, 26], "schedul": 24, "examin": [24, 25], "shortest": 25, "path": 25, "simul": 26, "base": 26, "explicit": 26, "represent": 26, "program": 26, "level": 26, "get": 27, "start": 27, "A": 27, "quick": 27, "tour": 27, "through": 27, "properti": 27, "result": 27, "all": 27, "investig": 27, "document": [28, 29], "indic": 28, "tabl": 28, "instal": 29, "requir": 29, "compat": 29, "storm": 29, "step": 29, "virtual": 29, "environ": 29, "option": 29, "argument": 29, "test": 29}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 56}})